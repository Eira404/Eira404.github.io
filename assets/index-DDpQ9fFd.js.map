{"version":3,"mappings":"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","names":["_createBlock","router","b","MutationObserver","elements","elfland","json","Category","Tag","Link","Article","echarts.use","GraphChart","TooltipComponent","TitleComponent","LegendComponent","GridComponent","CanvasRenderer","echarts.init","data","MarkdownItContainer","MarkdownItEmoji","MarkdownItAnchor","MarkdownItFootnote","MarkdownItAbbr","MarkdownItSub","MarkdownItSup","plantuml","markerBegin","markerEnd","configKeys","c","hljs"],"ignoreList":[],"sources":["../../src/App.vue","../../src/core/elfland/core/router-promise/index.ts","../../src/core/elfland/utils/stroage.ts","../../src/core/elfland/utils/lru.ts","../../src/core/elfland/utils/selector.ts","../../src/core/elfland/utils/index.ts","../../src/core/elfland/core/addon-base/index.ts","../../src/core/elfland-addon-theme/index.ts","../../src/core/elfland/core/promise-helper/index.ts","../../src/core/elfland-addon-data/core/index.ts","../../src/core/elfland-addon-articles/core/article.ts","../../src/core/elfland-addon-articles/core/index.ts","../../src/core/elfland-addon-links/core/link.ts","../../src/core/elfland-addon-links/core/index.ts","../../src/core/elfland-addon-article/core/renderer/init/Container.ts","../../src/core/elfland-addon-article/core/renderer/init/EmojiAnchorTocKatex.ts","../../src/core/elfland-addon-article/core/renderer/init/FootnoteAbbrSubSupUml.ts","../../src/core/elfland-addon-article/core/renderer/init/Image.ts","../../src/core/elfland-addon-article/core/renderer/plugin/layout.ts","../../src/core/elfland-addon-article/core/renderer/init/Layout.ts","../../src/core/elfland-addon-article/core/renderer/plugin/component.ts","../../src/core/elfland-addon-article/core/renderer/init/Component.ts","../../src/core/elfland-addon-article/core/renderer/plugin/template.ts","../../src/core/elfland-addon-article/core/renderer/init/Template.ts","../../src/core/elfland-addon-article/core/renderer/init/TemplateForTest.ts","../../src/core/elfland-addon-article/core/renderer/init/index.ts","../../src/core/elfland-addon-article/core/renderer/index.ts","../../src/core/elfland-addon-article/core/index.ts","../../src/core/elfland-addon-projects/core/projects-database.ts","../../src/core/elfland-addon-projects/core/index.ts","../../src/core/elfland-addon-tags/core/tag.ts","../../src/core/elfland-addon-tags/core/index.ts","../../src/core/elfland-addon-categories/core/category.ts","../../src/core/elfland-addon-categories/core/index.ts","../../src/core/elfland-addon-about/core/index.ts","../../src/core/elfland/core/index.ts","../../src/router/index.ts","../../src/main.ts"],"sourcesContent":["<template>\r\n  <router-view />\r\n</template>\r\n","import type {\r\n  RouteLocationNormalized,\r\n  NavigationGuardNext,\r\n  RouteLocationRaw,\r\n  Router\r\n} from 'vue-router'\r\nimport type { RouterPromiseSyncFuncRes } from '../../types'\r\n\r\ntype WaitFunc = (\r\n  to: RouteLocationNormalized,\r\n  from: RouteLocationNormalized\r\n) => Promise<RouteLocationRaw | void>\r\n\r\ntype SyncFunc = (\r\n  to: RouteLocationNormalized,\r\n  from: RouteLocationNormalized\r\n) => RouterPromiseSyncFuncRes\r\n\r\ntype CheckFuncData<T> = {\r\n  func: WaitFunc\r\n  context: T\r\n  level: number\r\n}\r\n\r\ntype PrecheckFuncData<T> = {\r\n  func: SyncFunc\r\n  context: T\r\n  level: number\r\n}\r\n\r\ntype PostcheckFuncData<T> = {\r\n  func: SyncFunc\r\n  context: T\r\n  level: number\r\n}\r\n\r\nexport class RouterPromise {\r\n  static getQueryData(to: RouteLocationNormalized, queryList: string[]): [string, string | undefined][] {\r\n    const res: [string, string | undefined][] = []\r\n    queryList.forEach((key) => {\r\n      res.push([key, to.query[key] as string | undefined])\r\n    })\r\n    return res\r\n  }\r\n  static checkQueryData(queryData: [string, string | undefined][], checkList: [string, 'must' | 'empty'][]): false;\r\n  static checkQueryData(queryData: [string, string | undefined][], checkList: [string, 'must' | 'empty' | 'func'][], func: (key: string, value: string | undefined) => boolean): false;\r\n  static checkQueryData(queryData: [string, string | undefined][], checkList: [string, 'must' | 'empty' | 'func'][], func?: (key: string, value: string | undefined) => boolean): false {\r\n    return false\r\n  }\r\n\r\n  private __promises: Array<Promise<RouteLocationRaw | void>> = []\r\n  private __checkFunctions: Array<CheckFuncData<unknown>> = []\r\n  private __precheckFunctions: Array<PrecheckFuncData<unknown>> = []\r\n  private __postcheckFunctions: Array<PostcheckFuncData<unknown>> = []\r\n\r\n  readonly router: Router\r\n\r\n  constructor(router: Router) {\r\n    this.router = router\r\n  }\r\n\r\n  /**\r\n   * 注册一个每次路由跳转前都会执行的函数\r\n   * 返回一个Promise代表是否需要加载数据\r\n   *\r\n   * @param func 函数\r\n   * @param context 函数上下文\r\n   * @param level 运行顺序，越大越靠后\r\n   */\r\n  addCheck<T>(func: WaitFunc, context: T, level: number = 0) {\r\n    const fd: CheckFuncData<T> = {\r\n      func,\r\n      context,\r\n      level\r\n    }\r\n    this.__checkFunctions.push(fd)\r\n    this.__checkFunctions.sort((a, b) => a.level - b.level)\r\n  }\r\n\r\n  /**\r\n   * 预检查函数\r\n   * @param func\r\n   * @param context\r\n   * @param level\r\n   */\r\n  addPrecheck<T>(func: SyncFunc, context: T, level: number = 0) {\r\n    const fd: PrecheckFuncData<T> = {\r\n      func,\r\n      context,\r\n      level\r\n    }\r\n    this.__precheckFunctions.push(fd)\r\n    this.__precheckFunctions.sort((a, b) => a.level - b.level)\r\n  }\r\n\r\n  /**\r\n   * 后检查函数\r\n   * @param func\r\n   * @param context\r\n   * @param level\r\n   */\r\n  addPostcheck<T>(func: SyncFunc, context: T, level: number = 0) {\r\n    const fd: PostcheckFuncData<T> = {\r\n      func,\r\n      context,\r\n      level\r\n    }\r\n    this.__postcheckFunctions.push(fd)\r\n    this.__postcheckFunctions.sort((a, b) => a.level - b.level)\r\n  }\r\n\r\n  /**\r\n   * 移除一个注册的函数\r\n   *\r\n   * @param func 函数\r\n   * @param context 函数上下文\r\n   */\r\n  removeCheck<T>(func: WaitFunc, context: T) {\r\n    this.__checkFunctions = this.__checkFunctions.filter(\r\n      (fd) => fd.func !== func || fd.context !== context\r\n    )\r\n  }\r\n\r\n  removePrecheck<T>(func: SyncFunc, context: T) {\r\n    this.__precheckFunctions = this.__precheckFunctions.filter(\r\n      (fd) => fd.func !== func || fd.context !== context\r\n    )\r\n  }\r\n\r\n  removePostcheck<T>(func: SyncFunc, context: T) {\r\n    this.__postcheckFunctions = this.__postcheckFunctions.filter(\r\n      (fd) => fd.func !== func || fd.context !== context\r\n    )\r\n  }\r\n\r\n  /**\r\n   * 为下次路由跳转添加一个需要等待的Promise\r\n   *\r\n   * @param p Promise对象\r\n   */\r\n  addPromise(p: Promise<RouteLocationRaw | void>) {\r\n    this.__promises.push(p)\r\n  }\r\n\r\n  /**\r\n   * 路由跳转前守卫触发\r\n   * 接收跳转信息\r\n   * 返回Promise等待跳转\r\n   *\r\n   * @param to 路由信息\r\n   * @param from 路由信息\r\n   * @param next next\r\n   */\r\n  async check(\r\n    to: RouteLocationNormalized,\r\n    from: RouteLocationNormalized,\r\n    next: NavigationGuardNext\r\n  ): Promise<boolean> {\r\n    this.__checkFunctions.forEach((fd) => {\r\n      this.__promises.push(fd.func.call(fd.context, to, from))\r\n    })\r\n    //\r\n    // 这里可能会抛出错误\r\n    //\r\n    try {\r\n      const resList = await Promise.all(this.__promises)\r\n      // console.log(resList)\r\n      for (let i = 0; i < resList.length; i++) {\r\n        const res = resList[i]\r\n        if (res) {\r\n          // console.log(res)\r\n          this.__promises = []\r\n          next(res)\r\n          // console.log('next')\r\n          return false\r\n        }\r\n      }\r\n    } catch (err) {\r\n      throw new Error('Error ' + err)\r\n    }\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * 路由进入触发，在wait之前\r\n   * @param to\r\n   * @param from\r\n   * @param next\r\n   * @returns\r\n   */\r\n  precheck(\r\n    to: RouteLocationNormalized,\r\n    from: RouteLocationNormalized,\r\n    next: NavigationGuardNext\r\n  ): boolean {\r\n    const resList: RouterPromiseSyncFuncRes[] = []\r\n    this.__precheckFunctions.forEach((fd) => {\r\n      resList.push(fd.func.call(fd.context, to, from))\r\n    })\r\n    // console.log('resList', resList)\r\n    return this.syncFuncCheck(resList, next)\r\n  }\r\n\r\n  /**\r\n   * 路由跳转后守卫触发\r\n   * 清空所有添加的Promise\r\n   *\r\n   */\r\n  postcheck(to: RouteLocationNormalized, from: RouteLocationNormalized) {\r\n    this.__postcheckFunctions.forEach((fd) => {\r\n      fd.func.call(fd.context, to, from)\r\n    })\r\n    this.__promises = []\r\n  }\r\n\r\n  private syncFuncCheck(resList: RouterPromiseSyncFuncRes[], next: NavigationGuardNext): boolean {\r\n    for (let i = 0; i < resList.length; i++) {\r\n      const res = resList[i]\r\n      if (res) {\r\n        if (res[0] === 'success') {\r\n          continue\r\n        } else if (res[0] === 'redirect') {\r\n          next(res[1])\r\n          return false\r\n        }\r\n      }\r\n    }\r\n    return true\r\n  }\r\n}\r\n","/**\r\n * local 取\r\n * @param key 键\r\n * @param defaultValue 默认值\r\n * @param type 存储类型\r\n * @returns value\r\n */\r\nexport function localGet<T = string>(\r\n  key: string,\r\n  defaultValue?: any,\r\n  checkFunc?: (value: T) => boolean,\r\n  type?: string\r\n) {\r\n  type = type || 'default'\r\n  type = type.toLocaleLowerCase()\r\n  if (\r\n    defaultValue !== undefined &&\r\n    defaultValue !== null &&\r\n    window.localStorage.getItem(key) === null\r\n  ) {\r\n    localSet(key, defaultValue, type)\r\n  }\r\n  switch (type) {\r\n    case 'default':\r\n      return window.localStorage.getItem(key)\r\n    case 'json':\r\n      return JSON.parse(window.localStorage.getItem(key) || '') as T\r\n    default:\r\n      throw new Error(`不可接受的type:${type}`)\r\n  }\r\n}\r\n\r\n/**\r\n * local 存\r\n * @param key 键\r\n * @param value 值\r\n * @param type 存储类型\r\n * @returns void\r\n */\r\nexport function localSet(key: string, value: any, type?: string) {\r\n  type = type || 'default'\r\n  type = type.toLocaleLowerCase()\r\n  switch (type) {\r\n    case 'default':\r\n      return window.localStorage.setItem(key, value)\r\n    case 'json':\r\n      return window.localStorage.setItem(key, JSON.stringify(value).toString())\r\n    default:\r\n      throw new Error(`不可接受的type:${type}`)\r\n  }\r\n}\r\n\r\n/**\r\n * local 删\r\n * @param key 键\r\n */\r\nexport function localDel(key: string) {\r\n  window.localStorage.removeItem(key)\r\n}\r\n\r\n/**\r\n * session 取\r\n * @param key 键\r\n * @param defaultValue 默认值\r\n * @param type 存储类型\r\n * @returns value\r\n */\r\nexport function sessionGet(key: string, defaultValue?: any, type?: string) {\r\n  type = type || 'default'\r\n  type = type.toLocaleLowerCase()\r\n  if (\r\n    defaultValue !== undefined &&\r\n    defaultValue !== null &&\r\n    window.sessionStorage.getItem(key) === null\r\n  ) {\r\n    sessionSet(key, defaultValue, type)\r\n  }\r\n  switch (type) {\r\n    case 'default':\r\n      return window.sessionStorage.getItem(key)\r\n    case 'json':\r\n      return JSON.parse(window.sessionStorage.getItem(key) || '')\r\n    default:\r\n      throw new Error(`不可接受的type:${type}`)\r\n  }\r\n}\r\n\r\n/**\r\n * session 存\r\n * @param key 键\r\n * @param value 值\r\n * @param type 存储类型\r\n * @returns void\r\n */\r\nexport function sessionSet(key: string, value: any, type?: string) {\r\n  type = type || 'default'\r\n  type = type.toLocaleLowerCase()\r\n  switch (type) {\r\n    case 'default':\r\n      return window.sessionStorage.setItem(key, value)\r\n    case 'json':\r\n      return window.sessionStorage.setItem(key, JSON.stringify(value).toString())\r\n    default:\r\n      throw new Error(`不可接受的type:${type}`)\r\n  }\r\n}\r\n\r\n/**\r\n * session 删\r\n * @param key 键\r\n */\r\nexport function sessionDel(key: string) {\r\n  window.sessionStorage.removeItem(key)\r\n}\r\n","export class LRUCache<K, V> extends Map {\r\n  capacity: number\r\n  deleteCallback: ((key: K, value: V) => void) | null\r\n\r\n  constructor(capacity?: number, deleteCallback?: (key: K, value: V) => void) {\r\n    super()\r\n    this.capacity = capacity || 100\r\n    this.deleteCallback = deleteCallback || null\r\n  }\r\n\r\n  set(key: K, value: V): this {\r\n    if (this.has(key)) {\r\n      this.delete(key)\r\n    } else {\r\n      if (this.size >= this.capacity) {\r\n        this.delete(this.keys().next().value)\r\n      }\r\n    }\r\n    return super.set(key, value)\r\n  }\r\n\r\n  get(key: K): V | undefined {\r\n    if (this.has(key)) {\r\n      const value = super.get(key)\r\n      super.delete(key)\r\n      super.set(key, value)\r\n      return value\r\n    } else return undefined\r\n  }\r\n\r\n  delete(key: any): boolean {\r\n    if (this.deleteCallback && this.has(key)) this.deleteCallback(key, super.get(key) as V)\r\n    return super.delete(key)\r\n  }\r\n}\r\n","import EventEmitter from 'eventemitter3'\r\n\r\nexport type SelectorMutationObserverConfig = {\r\n  childList: boolean\r\n  subtree: boolean\r\n}\r\nexport type SelectorListOptions = {\r\n  childrenEvent: boolean\r\n}\r\n\r\n/**\r\n * 1. 监听的事件\r\n * 2. 选择的元素，会传入document.querySelectorAll进行选择\r\n * 3. 事件出发后的响应回调事件名称\r\n * 4. 配置项\r\n */\r\nexport type SelectorListItem = [string, string, string, SelectorListOptions?]\r\nexport type SelectorList = Array<SelectorListItem>\r\n\r\n/**\r\n * - element: 事件触发的元素\r\n * - event: 事件名称\r\n * - select: 选择的元素\r\n * - e: html元素的事件传参\r\n */\r\nexport type SelectorEvent = {\r\n  element: Element\r\n  event: string\r\n  select: string\r\n  e: any\r\n}\r\nconst defaultSelectorListOptions: SelectorListOptions = {\r\n  childrenEvent: false\r\n}\r\n\r\nclass SelectorItem extends EventEmitter {\r\n  selector: Selector\r\n  element: Element\r\n  select: string\r\n  event: string\r\n  trigger: string\r\n  option: SelectorListOptions\r\n  onEvent_: (e: any) => void\r\n  constructor(\r\n    selector: Selector,\r\n    element: Element,\r\n    select: string,\r\n    event: string,\r\n    trigger: string,\r\n    option?: SelectorListOptions\r\n  ) {\r\n    super()\r\n    /**\r\n     * 选择器实例\r\n     */\r\n    this.selector = selector\r\n\r\n    /**\r\n     * 选定的标签\r\n     */\r\n    this.element = element\r\n\r\n    /**\r\n     * 选定该标签使用的querySelectorAll语句\r\n     */\r\n    this.select = select\r\n\r\n    /**\r\n     * 需要绑定的事件\r\n     */\r\n    this.event = event\r\n\r\n    /**\r\n     * 事件触发后，回调需要触发的事件\r\n     */\r\n    this.trigger = trigger\r\n\r\n    /**\r\n     * 配置项\r\n     * ```js\r\n     * const option = {\r\n     *   childrenEvent: false, // 如果事件从子元素冒泡，是否接收(false：不接收)\r\n     * }\r\n     * ```\r\n     */\r\n    this.option = option || defaultSelectorListOptions\r\n\r\n    this.onEvent_ = this.onEvent.bind(this)\r\n    this.element.addEventListener(this.event, this.onEvent_)\r\n  }\r\n\r\n  onEvent(e: any) {\r\n    if (e.target !== this.element && !this.option.childrenEvent) return\r\n    e.preventDefault()\r\n    this.selector.onEvent(this.element, this.event, this.select, e, this.trigger)\r\n  }\r\n\r\n  destroy() {\r\n    this.element.removeEventListener(this.event, this.onEvent_)\r\n  }\r\n}\r\n\r\nexport default class Selector extends EventEmitter {\r\n  selectList: SelectorList\r\n  root: Element\r\n\r\n  /**\r\n   * 校验\r\n   * 防止reselect事件回调触发\r\n   */\r\n  destroyed: boolean = false\r\n  map: Map<Element, Array<SelectorItem>>\r\n  observer: MutationObserver\r\n  config: SelectorMutationObserverConfig\r\n\r\n  constructor(selectList: SelectorList, root?: Element, config?: SelectorMutationObserverConfig) {\r\n    super()\r\n    const MutationObserver =\r\n      window.MutationObserver ||\r\n      (window as any).WebKitMutationObserver ||\r\n      (window as any).MozMutationObserver\r\n\r\n    /**\r\n     * 选择列表\r\n     * ```js\r\n     * const selectList = [\r\n     *   // event, querySelectorAll(...), trigger event name, opt\r\n     *   ['click', '#app', 'clickApp'],\r\n     *   ['mouseenter', 'a', 'enterA', { childrenEvent: false }]\r\n     * ]\r\n     * ```\r\n     */\r\n    this.selectList = selectList || []\r\n\r\n    /**\r\n     * 监视变化的根元素\r\n     */\r\n    this.root = root || document.body\r\n\r\n    /**\r\n     * 标签与SelectorItem图\r\n     *\r\n     * - key: element\r\n     * - value: [selectorItem1, selectorItem2, ...]\r\n     */\r\n    this.map = new Map()\r\n\r\n    /**\r\n     * MutationObserver观察者\r\n     */\r\n    this.observer = new MutationObserver((mutationsList, observer) => {\r\n      this.reselect(false)\r\n    })\r\n\r\n    /**\r\n     * MutationObserver观察配置项\r\n     */\r\n    this.config = config || { childList: true, subtree: true }\r\n\r\n    /**\r\n     * 开始观察\r\n     */\r\n    this.observer.observe(this.root, this.config)\r\n\r\n    /**\r\n     * 初始化标签选择\r\n     */\r\n    this.select()\r\n  }\r\n\r\n  /**\r\n   * 更新选择列表，并重新选择\r\n   * @param {Array} selectList 选择列表\r\n   */\r\n  updateSelectList(selectList: SelectorList) {\r\n    this.selectList = selectList\r\n    this.reselect(true)\r\n  }\r\n\r\n  /**\r\n   * 销毁选择器实例\r\n   */\r\n  destroy() {\r\n    if (this.destroyed) return\r\n    this.destroyed = true\r\n    const selectorItemLists = Array.from(this.map.values())\r\n    selectorItemLists.forEach((selectorItemList) => {\r\n      selectorItemList.forEach((selectorItem) => {\r\n        selectorItem.destroy()\r\n      })\r\n    })\r\n    this.observer.disconnect()\r\n    this.map.clear()\r\n    this.removeAllListeners()\r\n  }\r\n\r\n  /**\r\n   * 选择标签\r\n   */\r\n  select() {\r\n    setTimeout(() => {\r\n      if (this.destroyed) return\r\n      this.selectList.forEach((item) => {\r\n        const event = item[0]\r\n        const select = item[1]\r\n        const trigger = item[2]\r\n        const options = item[3]\r\n        const elements = Array.from(document.querySelectorAll(select))\r\n        elements.forEach((element) => {\r\n          const selectorItem = new SelectorItem(this, element, select, event, trigger, options)\r\n          if (!this.map.has(element)) this.map.set(element, [])\r\n          this.map.get(element)?.push(selectorItem)\r\n        })\r\n      })\r\n    }, 0)\r\n  }\r\n\r\n  /**\r\n   * 重新选择\r\n   */\r\n  reselect(force = false) {\r\n    setTimeout(() => {\r\n      if (this.destroyed) {\r\n        return\r\n      }\r\n      if (force === true) {\r\n        const selectorItemLists = Array.from(this.map.values())\r\n        selectorItemLists.forEach((selectorItemList) => {\r\n          selectorItemList.forEach((selectorItem) => {\r\n            selectorItem.destroy()\r\n          })\r\n        })\r\n        this.map.clear()\r\n      }\r\n      const tempMap = new Map()\r\n      const visitedElements = new Set()\r\n      this.selectList.forEach((item) => {\r\n        const event = item[0]\r\n        const select = item[1]\r\n        const trigger = item[2]\r\n        const options = item[3]\r\n        const elements = Array.from(document.querySelectorAll(select))\r\n        elements.forEach((element) => {\r\n          // 文档中存在该元素\r\n          //\r\n          visitedElements.add(element)\r\n          // 如果map中存在该元素 直接忽略\r\n          // 这样会导致reselect过程不能增加event\r\n          // 新增事件 需要force为true\r\n          //\r\n          if (this.map.has(element)) return\r\n          const selectorItem = new SelectorItem(this, element, select, event, trigger, options)\r\n          if (!tempMap.has(element)) tempMap.set(element, [])\r\n          tempMap.get(element).push(selectorItem)\r\n        })\r\n      })\r\n      // 由于tempMap和map键不会有冲突\r\n      // 直接合并\r\n      //\r\n      this.map = new Map([...this.map, ...tempMap])\r\n      const elements = Array.from(this.map.keys())\r\n      elements.forEach((element) => {\r\n        if (!document.contains(element) || !visitedElements.has(element)) {\r\n          // dom中不存在的\r\n          // 元素没有被遍历过的（dom中存在，但是没有被select）（但是好像不会出现这个情况，触发直接改selectList然后reselect(false)）\r\n          //\r\n          const selectorItemList = this.map.get(element) || []\r\n          selectorItemList.forEach((selectorItem) => {\r\n            selectorItem.destroy()\r\n          })\r\n          this.map.delete(element)\r\n        }\r\n      })\r\n    }, 0)\r\n  }\r\n\r\n  /**\r\n   * SelectorItem实例触发后的回调函数\r\n   *\r\n   * @param {HTMLElement} element html元素\r\n   * @param {String} event 事件触发名字\r\n   * @param {String} select querySelectorAll对应的选择方法\r\n   * @param {Object} e 事件获取的事件对象\r\n   * @param {String} trigger 触发器名字\r\n   */\r\n  onEvent(element: Element, event: string, select: string, e: any, trigger: string) {\r\n    const data: SelectorEvent = { element, event, select, e }\r\n    this.emit(trigger, data)\r\n  }\r\n}\r\n","import { ElMessage } from 'element-plus'\r\n\r\nexport * from './stroage'\r\nexport * from './lru'\r\nexport * from './selector'\r\n\r\n/**\r\n * 显示提示框\r\n * @param msg 提示信息\r\n * @param type 提示类型（默认error）\r\n * @param duration 提示时长（默认3000(ms)）\r\n */\r\nexport function message(\r\n  msg: string,\r\n  type?: 'error' | 'success' | 'info' | 'warning',\r\n  duration?: number\r\n) {\r\n  type = type || 'error'\r\n  duration = duration || (type === 'error' ? 4000 : 3000)\r\n  ElMessage({\r\n    message: msg,\r\n    type: type,\r\n    duration: duration\r\n  })\r\n}\r\n\r\nexport function isNumber(value: string | string[]) {\r\n  if (Array.isArray(value)) {\r\n    return value.every((v) => !Number.isNaN(Number(v)))\r\n  }\r\n  return !Number.isNaN(Number(value))\r\n}\r\n\r\n/**\r\n * 深拷贝对象\r\n * @param target 深拷贝对象\r\n * @returns 深拷贝结果\r\n */\r\nexport function deepClone(target: any, stack?: WeakMap<any, any>) {\r\n  function getType(obj: any): string {\r\n    type TypeMap = {\r\n      [property: string]: string\r\n    }\r\n    const map: TypeMap = {\r\n      '[object Boolean]': 'boolean',\r\n      '[object Number]': 'number',\r\n      '[object String]': 'string',\r\n      '[object Function]': 'function',\r\n      '[object Array]': 'array',\r\n      '[object Date]': 'date',\r\n      '[object RegExp]': 'regExp',\r\n      '[object Undefined]': 'undefined',\r\n      '[object Null]': 'null',\r\n      '[object Object]': 'object'\r\n    }\r\n    if (obj instanceof Element) {\r\n      return 'element'\r\n    }\r\n    return map[Object.prototype.toString.call(obj)] || 'unknown'\r\n  }\r\n\r\n  const type = getType(target)\r\n  if (type === 'array' || type === 'object') {\r\n    // 检查循环引用并返回其对应的克隆\r\n    stack || (stack = new WeakMap())\r\n    const stacked = stack.get(target)\r\n    if (stacked) {\r\n      return stacked\r\n    }\r\n    // 复杂数据类型 递归实现\r\n    //\r\n    if (type === 'array') {\r\n      const _clone: Array<any> = []\r\n      target.forEach((element: any) => {\r\n        _clone.push(deepClone(element, stack))\r\n      })\r\n      stack.set(target, _clone)\r\n      return _clone\r\n    }\r\n    if (type === 'object') {\r\n      type TypeClone = {\r\n        [property: string]: any\r\n      }\r\n      const _clone: TypeClone = {}\r\n      for (const key in target) {\r\n        if (Object.hasOwnProperty.call(target, key)) {\r\n          const element = target[key]\r\n          _clone[key] = deepClone(element, stack)\r\n        }\r\n      }\r\n      stack.set(target, _clone)\r\n      return _clone\r\n    }\r\n  } else {\r\n    // 基础数据类型 直接返回\r\n    //\r\n    return target\r\n  }\r\n}\r\n\r\n/**\r\n * 防抖函数\r\n * @param func 待执行的函数\r\n * @param delay 防抖时间 200\r\n * @returns Function\r\n */\r\nexport function debounce<T extends (...args: any[]) => void>(func: T, delay: number = 200): T {\r\n  let timerId: NodeJS.Timeout | null = null\r\n  return function (this: ThisParameterType<T>, ...args: any[]) {\r\n    if (timerId) {\r\n      clearTimeout(timerId)\r\n    }\r\n    timerId = setTimeout(() => {\r\n      func.apply(this, args)\r\n    }, delay)\r\n  } as T\r\n}\r\n\r\n/**\r\n * 节流函数\r\n * @param func 待执行的函数\r\n * @param delay 节流时间\r\n * @returns Function\r\n */\r\nexport function throttle<T extends (...args: any[]) => void>(func: T, delay: number = 200): T {\r\n  let timerId: NodeJS.Timeout | null = null\r\n  let lastExecutedTime = 0\r\n  return function (this: ThisParameterType<T>, ...args: any[]) {\r\n    const currentTime = Date.now()\r\n    const timeSinceLastExecution = currentTime - lastExecutedTime\r\n    if (timeSinceLastExecution >= delay) {\r\n      func.apply(this, args)\r\n      lastExecutedTime = currentTime\r\n    } else {\r\n      if (timerId) {\r\n        clearTimeout(timerId)\r\n      }\r\n      timerId = setTimeout(() => {\r\n        func.apply(this, args)\r\n        lastExecutedTime = Date.now()\r\n      }, delay - timeSinceLastExecution)\r\n    }\r\n  } as T\r\n}\r\n\r\nexport function parseTimeToSeconds(input: string): number {\r\n  // 定义时间单位到秒的换算关系\r\n  const timeUnits: Record<string, number> = {\r\n    y: 365 * 24 * 60 * 60, // 一年的秒数\r\n    w: 7 * 24 * 60 * 60, // 一周的秒数\r\n    d: 24 * 60 * 60, // 一天的秒数\r\n    h: 60 * 60, // 一小时的秒数\r\n    m: 60, // 一分钟的秒数\r\n    s: 1 // 一秒\r\n  }\r\n\r\n  // 定义时间单位的顺序\r\n  const order = ['y', 'w', 'd', 'h', 'm', 's']\r\n  let lastUnitIndex = -1 // 用于记录上一个时间单位的索引\r\n\r\n  // 正则表达式匹配时间单位和对应的数字\r\n  const regex = /(\\d+)([ywdhms])/g\r\n  let match\r\n  let totalSeconds = 0\r\n\r\n  const set = new Set()\r\n\r\n  // 遍历匹配结果\r\n  while ((match = regex.exec(input)) !== null) {\r\n    const [fullMatch, number, unit] = match\r\n    const num = parseInt(number, 10)\r\n\r\n    // 如果单位不存在或数字不是有效数字，返回 -1\r\n    if (!(unit in timeUnits) || isNaN(num)) {\r\n      return -1\r\n    }\r\n\r\n    // 如果单位前面有，返回 -1\r\n    if (set.has(unit)) return -1\r\n    set.add(unit)\r\n\r\n    // 检查时间单位的顺序\r\n    const currentUnitIndex = order.indexOf(unit)\r\n    if (currentUnitIndex < lastUnitIndex) {\r\n      // 当前单位出现在上一个单位之前，顺序错误\r\n      return -1\r\n    }\r\n    lastUnitIndex = currentUnitIndex\r\n\r\n    // 累加秒数\r\n    totalSeconds += num * timeUnits[unit]\r\n  }\r\n\r\n  // 检查是否匹配了整个字符串\r\n  if (input.replace(regex, '') !== '') {\r\n    return -1\r\n  }\r\n\r\n  return totalSeconds\r\n}\r\n\r\nexport function getDatesForNextSevenDays(startDate: Date): Date[] {\r\n  // 创建一个数组来存储日期\r\n  const dates: Date[] = []\r\n\r\n  // 将输入的日期复制一份，避免修改原始日期\r\n  let currentDate = new Date(startDate)\r\n\r\n  // 循环七次，每次添加一天\r\n  for (let i = 0; i < 7; i++) {\r\n    // 将当前日期的副本添加到数组中\r\n    dates.push(new Date(currentDate))\r\n\r\n    // 为当前日期加一天\r\n    currentDate = new Date(currentDate.setDate(currentDate.getDate() + 1))\r\n  }\r\n\r\n  return dates\r\n}\r\n\r\nexport function formatDate(date: Date): string {\r\n  const year = date.getFullYear()\r\n  const month = (date.getMonth() + 1).toString().padStart(2, '0') // 月份从0开始，需要+1\r\n  const day = date.getDate().toString().padStart(2, '0')\r\n  const hours = date.getHours().toString().padStart(2, '0')\r\n  const minutes = date.getMinutes().toString().padStart(2, '0')\r\n  const seconds = date.getSeconds().toString().padStart(2, '0')\r\n\r\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\r\n}\r\n\r\n/**\r\n * 随机字符串生成函数生成器\r\n * - 闭包存储map\r\n * @param characters_ 可选的字符\r\n * @returns 随机字符串生成函数\r\n */\r\nexport function generateRandomStringBase(characters_?: string) {\r\n  const idMap = new Map()\r\n  idMap.set('', true)\r\n  return function (length = 10) {\r\n    let result = ''\r\n    const length_ = length\r\n    const characters =\r\n      characters_ || '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\r\n    const charactersLength = characters.length\r\n\r\n    while (idMap.get(result) === true) {\r\n      for (let i = 0; i < length_; i++) {\r\n        result += characters.charAt(Math.floor(Math.random() * charactersLength))\r\n      }\r\n    }\r\n    idMap.set(result, true)\r\n\r\n    return result\r\n  }\r\n}\r\n","import type { RouteLocationNormalized } from 'vue-router'\r\nimport type { Elfland } from '..'\r\n\r\nexport abstract class ElflandAddon {\r\n  protected readonly __elfland: Elfland\r\n\r\n  constructor(elfland: Elfland) {\r\n    this.__elfland = elfland\r\n\r\n    elfland.on('logout', this.logoutCallback, this)\r\n  }\r\n\r\n  abstract logoutCallback(): void\r\n\r\n  /**\r\n   * 去往的页面的name是否是输入的name\r\n   * @param to RouteLocationNormalized\r\n   * @param name string\r\n   * @returns boolean\r\n   */\r\n  is(to: RouteLocationNormalized, name: string): boolean {\r\n    return to.name === name\r\n  }\r\n\r\n  /**\r\n   * 去往的页面的路由是否包含输入的name\r\n   * @param to RouteLocationNormalized\r\n   * @param name string\r\n   * @returns boolean\r\n   */\r\n  includes(to: RouteLocationNormalized, name: string): boolean {\r\n    return to.matched.find(item => item.name === name) !== undefined\r\n  }\r\n}\r\n","import type { Elfland } from '../elfland/core'\r\nimport { ref, watch } from 'vue'\r\nimport { localGet, localSet } from '../elfland/utils'\r\nimport { ElflandAddon } from '../elfland/core/addon-base'\r\n\r\nexport type ElflandTheme = 'light' | 'dark'\r\n\r\nexport class Theme extends ElflandAddon {\r\n  static readonly KEY = 'THEME'\r\n  readonly theme = ref<ElflandTheme>('light')\r\n\r\n  constructor(elfland: Elfland) {\r\n    super(elfland)\r\n\r\n    let t = localGet(Theme.KEY, 'light')\r\n    t = t === 'light' ? 'light' : 'dark'\r\n    localSet('THEME', t)\r\n    this.theme.value = t as ElflandTheme\r\n    if (t === 'dark') {\r\n      document.documentElement.classList.add('dark')\r\n      this.__elfland.emit('theme-change', 'dark')\r\n    }\r\n\r\n    watch(this.theme, (newValue) => {\r\n      newValue = newValue === 'light' ? 'light' : 'dark'\r\n      this.__elfland.emit('theme-change', newValue)\r\n      if (newValue === 'dark') {\r\n        document.documentElement.classList.add('dark')\r\n      } else {\r\n        document.documentElement.classList.remove('dark')\r\n      }\r\n      localSet(Theme.KEY, newValue)\r\n    })\r\n  }\r\n\r\n  toggle() {\r\n    this.theme.value = this.theme.value === 'light' ? 'dark' : 'light'\r\n  }\r\n\r\n  logoutCallback(): void {}\r\n}\r\n","import EventEmitter from 'eventemitter3'\r\n\r\nexport enum PromiseHelperState {\r\n  UNINIT,\r\n  WAITING,\r\n  PENDING,\r\n  RESOLVED,\r\n  REJECTED\r\n}\r\n\r\ntype PromiseHelperMapItem = {\r\n  promise: Promise<void>\r\n  resolve: (value: void | PromiseLike<void>) => void\r\n  reject: (reason?: any) => void\r\n}\r\n\r\nexport class PromiseHelper extends Map<string, Promise<void>> {\r\n  private ee = new EventEmitter()\r\n  private _corePromiseMap = new Map<string, Promise<void>>()\r\n\r\n  private initPromise(id: string) {\r\n    if (!this.has(id)) {\r\n      const p = new Promise<void>((resolve, reject) => {\r\n        const rse = id + '-resolve'\r\n        const rje = id + '-reject'\r\n        const rs = () => {\r\n          resolve()\r\n          this.ee.off(rse, rs)\r\n          this.ee.off(rje, rj)\r\n        }\r\n        const rj = () => {\r\n          reject()\r\n          this.ee.off(rse, rs)\r\n          this.ee.off(rje, rj)\r\n        }\r\n        this.ee.on(rse, rs)\r\n        this.ee.on(rje, rs)\r\n      })\r\n      this.set(id, p)\r\n    }\r\n  }\r\n\r\n  getPromise(id: string) {\r\n    this.initPromise(id)\r\n    return this.get(id) as Promise<void>\r\n  }\r\n\r\n  setPromise(id: string, promise: Promise<void>) {\r\n    this.initPromise(id)\r\n    this._corePromiseMap.set(id, promise)\r\n    const rse = id + '-resolve'\r\n    const rje = id + '-reject'\r\n    promise\r\n      .then(() => {\r\n        this.ee.emit(rse)\r\n      })\r\n      .catch(() => {\r\n        this.ee.emit(rje)\r\n      })\r\n  }\r\n}\r\n\r\nexport enum DefPromiseHelperState {\r\n  READY,\r\n  PENDING,\r\n  RESOLVED,\r\n  REJECTED\r\n}\r\n\r\nexport class DefPromiseHelper {\r\n  private __promise: Promise<void>\r\n  private __ee: EventEmitter\r\n  private __state: DefPromiseHelperState = DefPromiseHelperState.READY\r\n\r\n  /**\r\n   * 无实际意义\r\n   */\r\n  get state() {\r\n    return this.__state\r\n  }\r\n\r\n  /**\r\n   * 校验promise\r\n   */\r\n  get promise() {\r\n    return this.__promise\r\n  }\r\n\r\n  constructor() {\r\n    this.__ee = new EventEmitter()\r\n    this.__promise = new Promise((resolve, reject) => {\r\n      this.__ee.on('resolve', () => {\r\n        resolve()\r\n      })\r\n      this.__ee.on('reject', () => {\r\n        reject()\r\n      })\r\n    })\r\n    this.__state = DefPromiseHelperState.PENDING\r\n  }\r\n\r\n  /**\r\n   * 用resolve来解决所有的情况\r\n   */\r\n  resolve() {\r\n    this.__ee.emit('resolve')\r\n    this.__state = DefPromiseHelperState.RESOLVED\r\n  }\r\n\r\n  /**\r\n   * 禁用reject，否则await可能会抛出异常\r\n   */\r\n  private reject() {\r\n    this.__ee.emit('reject')\r\n    this.__state = DefPromiseHelperState.REJECTED\r\n  }\r\n}\r\n","import type { Elfland } from '@/core/elfland/core'\r\nimport { ElflandAddon } from '@/core/elfland/core/addon-base'\r\nimport { DefPromiseHelper } from '@/core/elfland/core/promise-helper'\r\nimport type { RouteLocationNormalized, RouteLocationRaw } from 'vue-router'\r\nimport type { DataResJson } from '../types'\r\n\r\nexport class Data extends ElflandAddon {\r\n  private __dataIsGotten: boolean = false\r\n  private __dataPromise: DefPromiseHelper = new DefPromiseHelper()\r\n  private __data: DataResJson | null = null\r\n\r\n  get waitingDataGet() {\r\n    return this.__dataPromise.promise\r\n  }\r\n\r\n  get data() {\r\n    return this.__data\r\n  }\r\n\r\n  constructor(elfland: Elfland) {\r\n    super(elfland)\r\n\r\n    elfland.routerPromise.addCheck(this.check, this)\r\n  }\r\n\r\n  logoutCallback(): void {}\r\n\r\n  private async check(\r\n    to: RouteLocationNormalized,\r\n    from: RouteLocationNormalized\r\n  ): Promise<RouteLocationRaw | void> {\r\n    if (this.__dataIsGotten) return\r\n    try {\r\n      const res = await fetch('/data/RES.json')\r\n      const json = await res.json() as DataResJson\r\n      this.__data = json\r\n      this.__dataPromise.resolve()\r\n      this.__dataIsGotten = true\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }\r\n}\r\n","import type { DocDataItem } from '@/core/elfland-addon-data'\r\nimport type { Articles } from '.'\r\nimport { deepClone } from '@/core/elfland/utils'\r\n\r\nexport class Category {\r\n  readonly category: string\r\n  readonly child: Category | null = null\r\n  constructor(categories: string[]) {\r\n    this.category = categories[0] || '未分组'\r\n    categories.shift()\r\n    if (categories.length > 0) this.child = new Category(categories)\r\n  }\r\n}\r\n\r\nexport class Tag {\r\n  readonly tag: string\r\n  constructor(tag: string) {\r\n    this.tag = tag\r\n  }\r\n}\r\n\r\nexport class Link {\r\n  readonly id: number\r\n  readonly title: string\r\n  readonly path: string\r\n\r\n  constructor(id: number, title: string, path: string) {\r\n    this.id = id\r\n    this.title = title\r\n    this.path = path\r\n  }\r\n}\r\n\r\nexport class Article {\r\n  readonly id: number\r\n  readonly title: string\r\n  readonly titlePinYin: string\r\n  readonly path: string\r\n  readonly time: string\r\n  readonly author: string\r\n  readonly body: string\r\n  readonly categories: Category\r\n  readonly tags: Tag[]\r\n  readonly links: Link[]\r\n  readonly created: Date\r\n  readonly modified: Date\r\n  readonly prev: {\r\n    title: string\r\n    path: string\r\n  }\r\n  readonly next: {\r\n    title: string\r\n    path: string\r\n  }\r\n  constructor(data: DocDataItem, articles: Articles) {\r\n    data = deepClone(data)\r\n    this.id = data.id\r\n    this.title = data.title\r\n    this.titlePinYin = data.titlePinYin\r\n    this.path = data.path\r\n    this.time = data.time\r\n    this.author = data.author\r\n    this.body = data.body\r\n    this.created = new Date(data.created)\r\n    this.modified = new Date(data.modified)\r\n    this.categories = new Category(data.categories)\r\n    this.tags = Array.from(new Set(data.tags)).map(t => new Tag(t))\r\n    this.links = data.links.map(l => {\r\n      const { id, path } = articles.getIdAndPath(l)\r\n      return new Link(id, l, path)\r\n    })\r\n    const pn = articles.getPrevAndNextById(data.id)\r\n    this.prev = pn.prev\r\n    this.next = pn.next\r\n  }\r\n}\r\n","import type { Elfland } from '@/core/elfland/core'\r\nimport { ElflandAddon } from '@/core/elfland/core/addon-base'\r\nimport { DefPromiseHelper } from '@/core/elfland/core/promise-helper'\r\nimport type { RouteLocationNormalized, RouteLocationRaw } from 'vue-router'\r\nimport { Article } from './article'\r\nimport { computed, reactive, ref, type ComputedRef, type Reactive, type Ref, type WritableComputedRef } from 'vue'\r\nimport { type ArchivesSortMethod } from '../types'\r\n\r\nexport class Articles extends ElflandAddon {\r\n  private __articlesIsGotten: boolean = false\r\n  private __articlesPromise: DefPromiseHelper = new DefPromiseHelper()\r\n\r\n  private __id2article: Reactive<Map<number, Article>> = reactive(new Map())\r\n  private __id2path: Map<number, string> = new Map()\r\n  private __path2id: Map<string, number> = new Map()\r\n  private __id2title: Map<number, string> = new Map()\r\n  private __title2id: Map<string, number> = new Map()\r\n  private __articles: ComputedRef<Article[]> = computed(() => {\r\n    const list = Array.from(this.__id2article.values())\r\n    list.sort((a, b) => b.created.getTime() - a.created.getTime())\r\n    return list\r\n  })\r\n  readonly archivesSortMethodSelected: Ref<ArchivesSortMethod> = ref('ByCreated')\r\n  readonly archivesSortMethodOptions: ComputedRef<ArchivesSortMethod[]> = computed(() => {\r\n    return [\r\n      'ByCreated',\r\n      'ByModified',\r\n      'ByTitlePinYin'\r\n    ]\r\n  })\r\n  private __sortMethodIsAsc: Reactive<Record<ArchivesSortMethod, boolean>> = reactive({\r\n    ByCreated: false,\r\n    ByModified: false,\r\n    ByTitlePinYin: true\r\n  })\r\n  readonly archivesSortMethodIsAsc: WritableComputedRef<boolean, boolean> = computed({\r\n    get: () => this.__sortMethodIsAsc[this.archivesSortMethodSelected.value],\r\n    set: (val) => {\r\n      this.__sortMethodIsAsc[this.archivesSortMethodSelected.value] = val\r\n    }\r\n  })\r\n  readonly sortedArchives: ComputedRef<Article[]> = computed(() => {\r\n    const list = Array.from(this.__id2article.values())\r\n    list.sort((a, b) => {\r\n      switch (this.archivesSortMethodSelected.value) {\r\n        case 'ByCreated':\r\n          return this.archivesSortMethodIsAsc.value ? a.created.getTime() - b.created.getTime() : b.created.getTime() - a.created.getTime()\r\n        case 'ByModified':\r\n          return this.archivesSortMethodIsAsc.value ? a.modified.getTime() - b.modified.getTime() : b.modified.getTime() - a.modified.getTime()\r\n        case 'ByTitlePinYin':\r\n          return this.archivesSortMethodIsAsc.value ? a.titlePinYin.localeCompare(b.titlePinYin) : b.titlePinYin.localeCompare(a.titlePinYin)\r\n      }\r\n    })\r\n    return list\r\n  })\r\n\r\n  get articles() {\r\n    return this.__articles\r\n  }\r\n\r\n  get waitingDataGet() {\r\n    return this.__articlesPromise.promise\r\n  }\r\n\r\n  constructor(elfland: Elfland) {\r\n    super(elfland)\r\n\r\n    elfland.routerPromise.addCheck(this.check, this)\r\n  }\r\n\r\n  logoutCallback(): void {}\r\n\r\n  private async check(\r\n    to: RouteLocationNormalized,\r\n    from: RouteLocationNormalized\r\n  ): Promise<RouteLocationRaw | void> {\r\n    if (this.__articlesIsGotten) return\r\n    try {\r\n      await this.__elfland.data.waitingDataGet\r\n      const data = this.__elfland.data.data\r\n      if (data === null) return\r\n      data.docs.forEach(d => {\r\n        this.__id2path.set(d.id, d.path)\r\n        this.__path2id.set(d.path, d.id)\r\n        this.__id2title.set(d.id, d.title)\r\n        this.__title2id.set(d.title, d.id)\r\n      })\r\n      data.docs.forEach(d => {\r\n        this.__id2article.set(d.id, new Article(d, this))\r\n      })\r\n      this.__articlesIsGotten = true\r\n      this.__articlesPromise.resolve()\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }\r\n\r\n  getIdAndPath(title: string): { id: number, path: string } {\r\n    const id = this.__title2id.get(title) || -1\r\n    const path = this.__id2path.get(id) || ''\r\n    return { id, path }\r\n  }\r\n\r\n  getPrevAndNextById(id: number): { prev: { path: string, title: string }, next: { path: string, title: string }} {\r\n    const list = Array.from(this.__id2path.keys())\r\n    const i = list.indexOf(id)\r\n    if (i === -1) return { prev: { path: '', title: '' }, next: { path: '', title: '' }}\r\n    const pi = i - 1 < 0 ? list.length - 1 : i - 1\r\n    const ni = i + 1 >= list.length ? 0 : i + 1\r\n    const pid = list[pi]\r\n    const nid = list[ni]\r\n    const prev = {\r\n      path: this.__id2path.get(pid) as string,\r\n      title: this.__id2title.get(pid) as string\r\n    }\r\n    const next = {\r\n      path: this.__id2path.get(nid) as string,\r\n      title: this.__id2title.get(nid) as string\r\n    }\r\n    return { prev, next }\r\n  }\r\n\r\n  getArticleByPath(path: string): Article | null {\r\n    const id = this.__path2id.get(path)\r\n    if (id === undefined) return null\r\n    const art = this.__id2article.get(id)\r\n    if (art === undefined) return null\r\n    return art\r\n  }\r\n}\r\n","export class Link {\r\n  readonly id: number\r\n  readonly path: string\r\n  readonly title: string\r\n\r\n  readonly in: Link[] = []\r\n  readonly out: Link[] = []\r\n\r\n  constructor(id: number, path: string, title: string) {\r\n    this.id = id\r\n    this.path = path\r\n    this.title = title\r\n  }\r\n}\r\n","import { ElflandAddon } from '@/core/elfland/core/addon-base'\r\nimport type { RouteLocationNormalized, RouteLocationRaw } from 'vue-router'\r\nimport { Link } from './link'\r\nimport type { Elfland } from '@/core/elfland/core'\r\nimport * as echarts from 'echarts/core'\r\nimport { watch, type WatchHandle } from 'vue'\r\n\r\nimport { GraphChart } from 'echarts/charts'\r\n\r\nimport {\r\n  TooltipComponent,\r\n  TitleComponent,\r\n  LegendComponent,\r\n  GridComponent\r\n} from 'echarts/components'\r\n\r\nimport { CanvasRenderer } from 'echarts/renderers'\r\n\r\necharts.use([\r\n  GraphChart as any,\r\n  TooltipComponent,\r\n  TitleComponent,\r\n  LegendComponent,\r\n  GridComponent,\r\n  CanvasRenderer\r\n])\r\n\r\nexport class Links extends ElflandAddon {\r\n  private __linksIsGotten: boolean = false\r\n  private __linksData: Map<number, Link> = new Map()\r\n  private __linksRenderData: { nodes: { id: string, name: string, path: string, category: string}[], links: { source: string, target: string }[]} = {\r\n    nodes: [],\r\n    links: []\r\n  }\r\n\r\n  private __chartElement: HTMLDivElement | null = null\r\n  private __myChart: echarts.ECharts | null = null\r\n  private __watchHandleTheme: WatchHandle | null = null\r\n  private __windowResizeFunc: any\r\n\r\n  constructor(elfland: Elfland) {\r\n    super(elfland)\r\n\r\n    elfland.routerPromise.addCheck(this.check, this)\r\n    this.__windowResizeFunc = this.resize.bind(this)\r\n  }\r\n\r\n  logoutCallback(): void {}\r\n\r\n  private async check(\r\n    to: RouteLocationNormalized,\r\n    from: RouteLocationNormalized\r\n  ): Promise<RouteLocationRaw | void> {\r\n    if (this.__linksIsGotten) return\r\n    try {\r\n      await this.__elfland.articles.waitingDataGet\r\n      const articles = this.__elfland.articles.articles.value\r\n      articles.forEach(a => {\r\n        const linkIns = new Link(a.id, a.path, a.title)\r\n        this.__linksData.set(a.id, linkIns)\r\n        this.__linksRenderData.nodes.push({\r\n          id: a.id.toString(),\r\n          name: a.title,\r\n          path: a.path,\r\n          category: 'A'\r\n        })\r\n      })\r\n      articles.forEach(a => {\r\n        const nLink = this.__linksData.get(a.id) as Link\r\n        a.links.forEach(l => {\r\n          const link = this.__linksData.get(l.id)\r\n          if (link) {\r\n            link.in.push(nLink)\r\n            nLink.out.push(link)\r\n            const sid = Math.min(nLink.id, link.id)\r\n            const tid = Math.max(nLink.id, link.id)\r\n            this.__linksRenderData.links.push({\r\n              source: sid.toString(),\r\n              target: tid.toString()\r\n            })\r\n          }\r\n        })\r\n      })\r\n      /** 过滤重复的边 */\r\n      this.__linksRenderData.links = this.__linksRenderData.links.filter((l, i, arr) => {\r\n        return arr.findIndex(l2 => l2.source === l.source && l2.target === l.target) === i\r\n      })\r\n      this.__linksIsGotten = true\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }\r\n\r\n  getLinks(id: number) {\r\n    return this.__linksData.get(id)\r\n  }\r\n\r\n  render(chartElement: HTMLDivElement) {\r\n    this.__chartElement = chartElement\r\n    if (this.__watchHandleTheme) this.__watchHandleTheme.stop()\r\n    this.distory()\r\n    const res = this.renderChart()\r\n    this.__watchHandleTheme = watch(this.__elfland.theme.theme, (newVal) => {\r\n      if (this.__myChart) {\r\n        this.__myChart.dispose()\r\n        this.__myChart = null\r\n      }\r\n      this.renderChart()\r\n    })\r\n    return res\r\n  }\r\n\r\n  distory() {\r\n    window.removeEventListener('resize', this.__windowResizeFunc)\r\n    if (this.__myChart) {\r\n      this.__myChart.dispose()\r\n      this.__myChart = null\r\n    }\r\n    if (this.__watchHandleTheme) {\r\n      this.__watchHandleTheme.stop()\r\n    }\r\n  }\r\n\r\n  private renderChart() {\r\n    if (this.__chartElement === null) return\r\n    const theme = this.__elfland.theme.theme.value\r\n    const data = this.__linksRenderData\r\n    const option: echarts.EChartsCoreOption = {\r\n      title: {\r\n        text: '关系图谱',\r\n        subtext: '点击结点以跳转文章',\r\n        top: '20px',\r\n        left: '20px'\r\n      },\r\n      tooltip: {\r\n        show: false\r\n      },\r\n      backgroundColor: 'rgba(0, 0, 0, 0)',\r\n      series: [\r\n        {\r\n          type: 'graph',\r\n          layout: 'force', // 使用自定义布局\r\n          symbolSize: 20,\r\n          roam: true,\r\n          label: {\r\n            show: true,\r\n            color: theme === 'dark' ? '#fff' : '#000',\r\n            fontSize: 12,\r\n            position: 'bottom'\r\n          },\r\n          force: {\r\n            repulsion: 5000\r\n          },\r\n          edgeSymbol: ['none', 'none'],\r\n          edgeSymbolSize: [4, 10],\r\n          edgeLabel: {\r\n            show: false\r\n          },\r\n          data: data.nodes,\r\n          links: data.links,\r\n          categories: [{ name: 'A', itemStyle: { color: '#4fadff' }}],\r\n          lineStyle: {\r\n            opacity: 0.9,\r\n            width: 2\r\n          },\r\n          emphasis: {\r\n            focus: 'adjacency'\r\n          },\r\n          draggable: true // 允许节点拖动\r\n        }\r\n      ]\r\n    }\r\n    this.__myChart = echarts.init(this.__chartElement, theme === 'light' ? undefined : 'dark')\r\n    this.__myChart.setOption(option)\r\n    this.__myChart.on('click', (params) => {\r\n      if (params.dataType === 'node' && params.data) {\r\n        const data = params.data as { id: number, path: string, name: string}\r\n        this.__elfland.routerPromise.router.push({\r\n          name: 'article',\r\n          params: {\r\n            articlePath: data.path as string\r\n          }\r\n        })\r\n      }\r\n    })\r\n    window.addEventListener('resize', this.__windowResizeFunc)\r\n    return true\r\n  }\r\n\r\n  private resize() {\r\n    if (this.__myChart) {\r\n      this.__myChart.resize()\r\n    }\r\n  }\r\n}\r\n","import MarkdownItContainer from 'markdown-it-container'\r\nimport type MarkdownIt from 'markdown-it'\r\nimport type Token from 'markdown-it/lib/token.mjs'\r\nfunction initContainers(md: MarkdownIt) {\r\n  const list = ['warning', 'tip', 'info', 'success']\r\n  list.forEach((item) => {\r\n    md.use(MarkdownItContainer, item, {\r\n      render: function (tokens: Token[], idx: number) {\r\n        if (tokens[idx].nesting === 1) {\r\n          // opening tag\r\n          return (\r\n            '<div class=\"md-c-c md-c-c--' + item + '\"><p>' + item.toLocaleUpperCase() + '</p>\\n'\r\n          )\r\n        } else {\r\n          // closing tag\r\n          return '</div>\\n'\r\n        }\r\n      }\r\n    })\r\n  })\r\n}\r\nfunction initMarkdownItContainer(md: MarkdownIt) {\r\n  initContainers(md)\r\n\r\n  md.use(MarkdownItContainer, 'details', {\r\n    validate: function (params: any) {\r\n      return params.trim().match(/^details\\s+(.*)$/)\r\n    },\r\n    render: function (tokens: Token[], idx: number) {\r\n      const m = tokens[idx].info.trim().match(/^details\\s+(.*)$/)\r\n\r\n      if (tokens[idx].nesting === 1 && m) {\r\n        // opening tag\r\n        return '<details><summary>' + md.utils.escapeHtml(m[1]) + '</summary>\\n'\r\n      } else {\r\n        // closing tag\r\n        return '</details>\\n'\r\n      }\r\n    }\r\n  })\r\n  md.use(MarkdownItContainer, 'image', {\r\n    validate: function (params: any) {\r\n      return params.trim().match(/^image\\s+(.*)$/)\r\n    },\r\n    render: function (tokens: Token[], idx: number) {\r\n      // 去node_modules\\markdown-it-container\\index.mjs\r\n      // 将118行复制到125行下面并且改为\r\n      // token_c.info   = params\r\n      //\r\n      const m = tokens[idx].info.trim().match(/^image\\s+(.*)$/)\r\n\r\n      if (tokens[idx].nesting === 1) {\r\n        // opening tag\r\n        return '<div class=\"md-c-img\">\\n'\r\n      } else {\r\n        // closing tag\r\n        // 在closing tag使用info信息需要去改源码\r\n        if (m === null) return '</div>'\r\n        return '<span>' + (m[1] === 'null' ? '' : md.utils.escapeHtml(m[1])) + '</span></div>\\n'\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport default [initMarkdownItContainer]\r\n","import { full as MarkdownItEmoji } from 'markdown-it-emoji'\r\nfunction initMarkdownItEmoji(md: MarkdownIt) {\r\n  md.use(MarkdownItEmoji)\r\n}\r\n\r\nimport MarkdownItAnchor from 'markdown-it-anchor'\r\nfunction initMarkdownItAnchor(md: MarkdownIt) {\r\n  md.use(MarkdownItAnchor, {\r\n    permalink: MarkdownItAnchor.permalink.linkInsideHeader({\r\n      placement: 'before'\r\n    })\r\n  })\r\n}\r\n\r\nimport MarkdownItTocDoneRight from 'markdown-it-toc-done-right'\r\nfunction initMarkdownItTocDoneRight(md: MarkdownIt, elflandRenderer: any) {\r\n  md.use(MarkdownItTocDoneRight, {\r\n    listType: 'ul',\r\n    level: [1],\r\n    callback: (html: any, ast: any) => {\r\n      elflandRenderer.renderToc(html, ast)\r\n    }\r\n  })\r\n}\r\n\r\nimport MarkdownItKatex from 'markdown-it-katex'\r\nimport type MarkdownIt from 'markdown-it'\r\nfunction initMarkdownItKatex(md: MarkdownIt) {\r\n  md.use(MarkdownItKatex, {\r\n    throwOnError: false,\r\n    errorColor: '#cc0000'\r\n  })\r\n}\r\n\r\nexport default [\r\n  initMarkdownItEmoji,\r\n  initMarkdownItAnchor,\r\n  initMarkdownItTocDoneRight,\r\n  initMarkdownItKatex\r\n]\r\n","import MarkdownItFootnote from 'markdown-it-footnote'\r\nfunction initMarkdownItFootnote(md: MarkdownIt) {\r\n  md.use(MarkdownItFootnote)\r\n}\r\n\r\nimport MarkdownItAbbr from 'markdown-it-abbr'\r\nfunction initMarkdownItAbbr(md: MarkdownIt) {\r\n  md.use(MarkdownItAbbr)\r\n}\r\n\r\nimport MarkdownItSub from 'markdown-it-sub'\r\nfunction initMarkdownItSub(md: MarkdownIt) {\r\n  md.use(MarkdownItSub)\r\n}\r\nimport MarkdownItSup from 'markdown-it-sup'\r\nfunction initMarkdownItSup(md: MarkdownIt) {\r\n  md.use(MarkdownItSup)\r\n}\r\n\r\n// import MarkdownItTextualUml from 'markdown-it-textual-uml'\r\n// function initMarkdownItTextualUml(md) {\r\n//   md.use(MarkdownItTextualUml)\r\n// }\r\n\r\nimport { plantuml } from '@mdit/plugin-plantuml'\r\nimport type MarkdownIt from 'markdown-it'\r\nfunction initMarkdownItPlantuml(md: MarkdownIt) {\r\n  md.use(plantuml)\r\n}\r\n\r\nexport default [\r\n  initMarkdownItFootnote,\r\n  initMarkdownItAbbr,\r\n  initMarkdownItSub,\r\n  initMarkdownItSup,\r\n  initMarkdownItPlantuml\r\n]\r\n","import type MarkdownIt from 'markdown-it'\r\nimport type Token from 'markdown-it/lib/token.mjs'\r\nimport type { Options } from 'markdown-it'\r\nimport type Renderer from 'markdown-it/lib/renderer.mjs'\r\n\r\nfunction initImage(md: MarkdownIt, elflandRenderer: any, meta: any) {\r\n  const baseUrl = meta ? meta.baseUrl || '' : ''\r\n  const defaultImage = md.renderer.rules.image\r\n  function image(tokens: Token[], idx: number, options: Options, env: any, slf: Renderer) {\r\n    const url = tokens[idx].attrGet('src') || ''\r\n    if (\r\n      url.startsWith('http://') ||\r\n      url.startsWith('https://') ||\r\n      url.startsWith('data:image') ||\r\n      url.startsWith('file://') ||\r\n      url.startsWith('blob:')\r\n    ) {\r\n      if (defaultImage === undefined) return ''\r\n      return defaultImage(tokens, idx, options, env, slf)\r\n    } else {\r\n      tokens[idx].attrSet('src', baseUrl + '/data/assets/' + url)\r\n      if (defaultImage === undefined) return ''\r\n      return defaultImage(tokens, idx, options, env, slf)\r\n    }\r\n  }\r\n  md.renderer.rules.image = image\r\n}\r\n\r\nexport default [initImage]\r\n","export default function LayoutPlugin(md: any, name: string, options: any) {\r\n  function renderDefault(tokens: any[], idx: number, _options: any, env: any, slf: any) {\r\n    // add a class to the opening tag\r\n    if (tokens[idx].nesting === 1) {\r\n      tokens[idx].attrJoin('class', name)\r\n    }\r\n    return slf.renderToken(tokens, idx, _options, env, slf)\r\n  }\r\n\r\n  options = options || {}\r\n  const markerBegin = '{('\r\n  const markerEnd = ')}'\r\n  const layoutBegin = options.begin || 'begin'\r\n  const layoutEnd = options.end || 'end'\r\n  const indent = options.indent || false\r\n  const indentSize = options.indentSize || 4\r\n  const className = options.className || ''\r\n\r\n  const render = options.render || renderDefault\r\n\r\n  function findMarker(state: any, start: number, max: number, line: number) {\r\n    // 在行内寻找marker\r\n    let pos: number\r\n\r\n    // 检查是否是以markerBegin起始\r\n    // 这样可以快速过滤\r\n    //\r\n    if (markerBegin !== state.src.slice(start, start + 2)) {\r\n      return false\r\n    }\r\n\r\n    // 在此行内寻找markerEnd\r\n    // 需要注意，在出现markEnd之后的内容无效\r\n    //\r\n    let find = false\r\n    for (pos = start + 2; pos < max; pos++) {\r\n      if (state.src.slice(pos, pos + 2) === markerEnd) {\r\n        find = true\r\n        break\r\n      }\r\n    }\r\n    if (!find) {\r\n      return false\r\n    }\r\n\r\n    // 处理其中的内容\r\n    //\r\n    const dataStr = state.src.slice(start + 2, pos)\r\n    const data = dataStr.split('|').map((item: string) => item.trim())\r\n    const markup = markerBegin + dataStr + markerEnd\r\n    let self = false\r\n\r\n    // 检查data是否以layoutBegin或者layoutEnd开头\r\n    // layoutBegin 后面必须要跟 name\r\n    //\r\n    let markerType: number\r\n    if (data[0] === layoutBegin) {\r\n      markerType = 1\r\n      if (data[1] === name) {\r\n        self = true\r\n      }\r\n    } else if (data[0] === layoutEnd) {\r\n      markerType = -1\r\n    } else {\r\n      return false\r\n    }\r\n    // 返回marker数据\r\n    //\r\n    return {\r\n      markerType,\r\n      data,\r\n      markup,\r\n      line: line,\r\n      self\r\n    }\r\n  }\r\n\r\n  function findPairOfMarkers(state: any, startLine: number, endLine: number, silent: boolean) {\r\n    // 找到一对marker\r\n    // 要考虑到嵌套关系\r\n    //\r\n    let markerLevel = 0\r\n    let line = startLine\r\n    let markerBegin: any = null\r\n    let markerEnd: any = null\r\n    for (; line < endLine; line++) {\r\n      const start = state.bMarks[line] + state.tShift[line]\r\n      const max = state.eMarks[line]\r\n      const marker = findMarker(state, start, max, line)\r\n      if (marker) {\r\n        if (marker.markerType === 1) {\r\n          // begin\r\n          if (markerBegin === null && marker.self) {\r\n            markerBegin = marker\r\n\r\n            // Since start is found, we can report success here in validation mode\r\n            //\r\n            if (silent) {\r\n              return true\r\n            }\r\n          } else {\r\n            if (markerBegin === null) {\r\n              return false\r\n            }\r\n            markerLevel++\r\n          }\r\n        } else {\r\n          // end\r\n          if (markerLevel === 0 && markerBegin !== null) {\r\n            // finish!\r\n            markerEnd = marker\r\n            break\r\n          } else {\r\n            markerLevel--\r\n          }\r\n        }\r\n      } else {\r\n        if (markerBegin === null) {\r\n          return false\r\n        } else {\r\n          continue\r\n        }\r\n      }\r\n      // console.log('marker', marker, line, markerLevel)\r\n    }\r\n    if (markerBegin && markerEnd) {\r\n      return {\r\n        markerBegin,\r\n        markerEnd\r\n      }\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  function subtractIndent(state: any, startLine: number, endLine: number) {\r\n    // console.log('subtractIndent', state.sCount, state.bsCount, state.tShift)\r\n    for (let i = startLine + 1; i < endLine; i++) {\r\n      // state.sCount[i] -= indentSize\r\n    }\r\n    // console.log('subtractIndent --', state.sCount)\r\n  }\r\n\r\n  function layout(state: any, startLine: number, endLine: number, silent: boolean) {\r\n    const markers = findPairOfMarkers(state, startLine, endLine, silent)\r\n    if (!markers) return false\r\n    if (markers === true) return true\r\n\r\n    // console.log('subtractIndent', state.blkIndent, state.listIndent)\r\n    if (indent) {\r\n      subtractIndent(state, markers.markerBegin.line, markers.markerEnd.line)\r\n    }\r\n\r\n    const oldParent = state.parentType\r\n    const oldLineMax = state.lineMax\r\n    state.parentType = 'layout'\r\n\r\n    // this will prevent lazy continuations from ever going past our end marker\r\n    state.lineMax = markers.markerEnd.line\r\n\r\n    const token_o = state.push('layout_' + name + '_open', 'div', 1)\r\n    token_o.markup = markers.markerBegin.markup\r\n    token_o.block = true\r\n    token_o.meta = {\r\n      data: markers.markerBegin.data,\r\n      className\r\n    }\r\n    token_o.map = [markers.markerBegin.line, markers.markerEnd.line]\r\n    // console.log('layout 开始', markers.markerBegin, state.level, state.blkIndent, state.listIndent)\r\n    state.md.block.tokenize(state, startLine + 1, markers.markerEnd.line)\r\n    const token_c = state.push('layout_' + name + '_close', 'div', -1)\r\n    token_c.markup = markers.markerEnd.markup\r\n    token_c.block = true\r\n    token_c.meta = {\r\n      data: markers.markerEnd.data\r\n    }\r\n    // console.log('layout 结束', markers.markerBegin, state.level)\r\n    state.parentType = oldParent\r\n    state.lineMax = oldLineMax\r\n    state.line = markers.markerEnd.line + 1\r\n    return true\r\n  }\r\n  md.block.ruler.before('fence', 'layout_' + name, layout, {\r\n    alt: ['paragraph', 'reference', 'blockquote', 'list']\r\n  })\r\n  md.renderer.rules['layout_' + name + '_open'] = render\r\n  md.renderer.rules['layout_' + name + '_close'] = render\r\n}\r\n","import type MarkdownIt from 'markdown-it'\r\nimport LayoutPlugin from '../plugin/layout'\r\nimport type Token from 'markdown-it/lib/token.mjs'\r\nfunction initLayoutPlugin(md: MarkdownIt) {\r\n  md.use(LayoutPlugin, 'container', {\r\n    className: 'md-layout-c',\r\n    render: function (tokens: Token[], idx: number) {\r\n      const ALLOW_STYLE_ATTR = [\r\n        ['w', 'width'],\r\n        ['h', 'height'],\r\n        ['style', 'style'],\r\n        ['class', 'class']\r\n      ]\r\n\r\n      if (tokens[idx].nesting === 1) {\r\n        let styleStr = ''\r\n        let classStr = tokens[idx].meta.className + ' '\r\n        tokens[idx].meta.data.forEach((data: any) => {\r\n          const key = data.split('=')[0]\r\n          const left = data.indexOf('=')\r\n          const value = data.slice(left + 1, data.length)\r\n          const item = ALLOW_STYLE_ATTR.find((i) => i[0] === key)\r\n          if (item) {\r\n            if (item[1] === 'style') {\r\n              styleStr += value\r\n            } else if (item[1] === 'class') {\r\n              classStr += value\r\n            } else {\r\n              styleStr += item[1] + ':' + value + ';'\r\n            }\r\n          }\r\n        })\r\n        // opening tag\r\n        return '<div class=\"' + (classStr === ' ' ? '' : classStr) + '\" style=\"' + styleStr + '\">\\n'\r\n      } else {\r\n        // closing tag\r\n        return '</div>\\n'\r\n      }\r\n    }\r\n  })\r\n  md.use(LayoutPlugin, 'item', {\r\n    className: 'md-layout-i',\r\n    render: function (tokens: Token[], idx: number) {\r\n      const ALLOW_STYLE_ATTR = [\r\n        ['w', 'width'],\r\n        ['h', 'height'],\r\n        ['style', 'style'],\r\n        ['class', 'class']\r\n      ]\r\n\r\n      if (tokens[idx].nesting === 1) {\r\n        let styleStr = ''\r\n        let classStr = tokens[idx].meta.className + ' '\r\n        tokens[idx].meta.data.forEach((data: any) => {\r\n          const key = data.split('=')[0]\r\n          const left = data.indexOf('=')\r\n          const value = data.slice(left + 1, data.length)\r\n          const item = ALLOW_STYLE_ATTR.find((i) => i[0] === key)\r\n          if (item) {\r\n            if (item[1] === 'style') {\r\n              styleStr += value\r\n            } else if (item[1] === 'class') {\r\n              classStr += value\r\n            } else {\r\n              styleStr += item[1] + ':' + value + ';'\r\n            }\r\n          }\r\n        })\r\n        // opening tag\r\n        return '<div class=\"' + (classStr === ' ' ? '' : classStr) + '\" style=\"' + styleStr + '\">\\n'\r\n      } else {\r\n        // closing tag\r\n        return '</div>\\n'\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport default [initLayoutPlugin]\r\n","import type MarkdownIt from 'markdown-it'\r\nimport type Token from 'markdown-it/lib/token.mjs'\r\nimport type Renderer from 'markdown-it/lib/renderer.mjs'\r\nimport type { Options } from 'markdown-it'\r\nimport type StateBlock from 'markdown-it/lib/rules_block/state_block.mjs'\r\n\r\ntype ConfigKey = string | string[]\r\n\r\ntype ConfigsDict = {\r\n  [property: string]: string | string[]\r\n}\r\n\r\nexport interface ComponentPluginOptions {\r\n  init?: (options: ComponentPluginOptions) => void\r\n  markerBegin?: string\r\n  markerEnd?: string\r\n  dataDivision?: string\r\n  configDivision?: string\r\n  useEqual?: boolean\r\n  useIndex?: boolean\r\n  configKeys?: ConfigKey[]\r\n  render?: (tokens: Token[], idx: number, _options: Options, env: any, slf: Renderer) => string\r\n  renderDivision?: (\r\n    tokens: Token[],\r\n    idx: number,\r\n    _options: Options,\r\n    env: any,\r\n    slf: Renderer\r\n  ) => string\r\n}\r\n\r\ntype FindStartRes =\r\n  | {\r\n      check: false\r\n    }\r\n  | {\r\n      check: true\r\n      name: boolean\r\n      pos?: number\r\n    }\r\n\r\ntype FindEndRes =\r\n  | {\r\n      check: false\r\n    }\r\n  | {\r\n      check: true\r\n      pos: number\r\n    }\r\n\r\ntype FindDataDRes =\r\n  | {\r\n      check: false\r\n    }\r\n  | {\r\n      check: true\r\n      pos: number\r\n    }\r\n\r\ntype AnsDataRes =\r\n  | {\r\n      check: false\r\n    }\r\n  | {\r\n      check: true\r\n      silent: true\r\n    }\r\n  | {\r\n      check: true\r\n      silent?: true\r\n      configList: string[]\r\n      dataList: Array<{ lineBegin: number; lineEnd: number }>\r\n      markerBeginData: {\r\n        markup: string\r\n        pos: number\r\n        line: number\r\n      }\r\n      markerEndData: {\r\n        markup: string\r\n        line: number\r\n      }\r\n    }\r\n\r\nexport default function componentPlugin(\r\n  md: MarkdownIt,\r\n  name: string | string[],\r\n  options?: ComponentPluginOptions\r\n) {\r\n  if (typeof name !== 'string' || name === '') return\r\n\r\n  const defaultName = Array.isArray(name) ? name[0] : name\r\n  const namesSet = new Set(Array.isArray(name) ? name : [name])\r\n\r\n  function renderDefault(tokens: Token[], idx: number, _options: Options, env: any, slf: Renderer) {\r\n    //\r\n    // add a class to the opening tag\r\n    //\r\n    if (tokens[idx].nesting === 1) {\r\n      tokens[idx].attrJoin('class', defaultName)\r\n    }\r\n    return slf.renderToken(tokens, idx, _options)\r\n  }\r\n\r\n  function renderDivisionDefault(\r\n    tokens: Token[],\r\n    idx: number,\r\n    _options: Options,\r\n    env: any,\r\n    slf: Renderer\r\n  ) {\r\n    return slf.renderToken(tokens, idx, _options)\r\n  }\r\n\r\n  options = options || {}\r\n\r\n  const markerBegin = options.markerBegin || '{|'\r\n  const markerEnd = options.markerEnd || '|}'\r\n  const dataDivision = options.dataDivision || '|-'\r\n  const configDivision = options.configDivision || '|'\r\n  //\r\n  // 为true则支持语法：config1 = xxx\r\n  //\r\n  const useEqual = options.useEqual || true\r\n  //\r\n  // 0 = xxx\r\n  // xxx\r\n  // ->\r\n  // 0: xxx\r\n  //\r\n  const useIndex = options.useIndex || false\r\n  //\r\n  // config keys\r\n  // 设置这个才能更好的使用 0=xxx\r\n  // 例如: 设置[\"color\"];md中写0=red\r\n  // 获得: { \"color\": \"red\" }\r\n  // 否则获得: { \"0\": \"red\" }\r\n  //\r\n  const configKeys = options.configKeys || []\r\n  //\r\n  // 配置映射关系\r\n  //\r\n  const confMap = buildConfMap(configKeys)\r\n\r\n  const render = options.render || renderDefault\r\n\r\n  const renderDivision = options.renderDivision || renderDivisionDefault\r\n\r\n  if (options.init instanceof Function) options.init(options)\r\n\r\n  function buildConfMap(configKeys: ConfigKey[]) {\r\n    const map = new Map<string, string>()\r\n    configKeys.forEach((conf) => {\r\n      if (Array.isArray(conf)) {\r\n        const base = conf[0]\r\n        conf.forEach((c) => {\r\n          map.set(base, c)\r\n        })\r\n      } else {\r\n        map.set(conf, conf)\r\n      }\r\n    })\r\n    return map\r\n  }\r\n\r\n  function isComponentBegin(state: StateBlock, start: number): FindStartRes {\r\n    // 在行内寻找 markerBegin\r\n    // markerBegin 必须是一行起始\r\n    //\r\n    const l = markerBegin.length\r\n    // 检查是否是以 markerBegin 起始\r\n    //\r\n    if (markerBegin !== state.src.slice(start, start + l)) {\r\n      return {\r\n        check: false\r\n      }\r\n    }\r\n\r\n    // 以 markerBegin 起始\r\n    // 检查后面是否跟着 自己的name\r\n    //\r\n    const p = state.src.indexOf(configDivision, start + l)\r\n    // console.log('configDivision', state.src, configDivision, p)\r\n    const n = state.src.slice(start + l, p).trim()\r\n    // console.log('n', n, namesSet)\r\n    if (!namesSet.has(n)) {\r\n      return {\r\n        check: true,\r\n        name: false\r\n      }\r\n    }\r\n\r\n    return {\r\n      check: true,\r\n      name: true,\r\n      pos: start + l + name.length\r\n    }\r\n  }\r\n\r\n  function isComponentEnd(state: StateBlock, start: number): FindEndRes {\r\n    // 在行内寻找 markerEnd\r\n    // markerEnd 必须是一行起始\r\n    // markerEnd 后面内容无效\r\n    //\r\n\r\n    // 检查是否是以 markerEnd 起始\r\n    //\r\n    if (markerEnd !== state.src.slice(start, start + markerEnd.length)) {\r\n      return {\r\n        check: false\r\n      }\r\n    }\r\n\r\n    return {\r\n      check: true,\r\n      pos: start\r\n    }\r\n  }\r\n\r\n  function isDataDivision(state: StateBlock, start: number): FindDataDRes {\r\n    // 在行内寻找 dataDivision\r\n    // dataDivision 必须是一行起始\r\n    // dataDivision 后面内容无效\r\n    //\r\n\r\n    // 检查是否是以 dataDivision 起始\r\n    //\r\n    if (dataDivision !== state.src.slice(start, start + dataDivision.length)) {\r\n      return {\r\n        check: false\r\n      }\r\n    }\r\n\r\n    return {\r\n      check: true,\r\n      pos: start\r\n    }\r\n  }\r\n\r\n  function analyseData(\r\n    state: StateBlock,\r\n    startLine: number,\r\n    endLine: number,\r\n    silent: boolean\r\n  ): AnsDataRes {\r\n    // 找到一对marker\r\n    // 要考虑到嵌套关系\r\n    //\r\n    let markerLevel = 0\r\n    let line = startLine\r\n    let markerBeginData = null\r\n    let markerEndData = null\r\n    let lastDataDivisionLine = -1\r\n    const dataList = []\r\n    let configList = null\r\n    for (; line < endLine; line++) {\r\n      const start = state.bMarks[line] + state.tShift[line]\r\n      const max = state.eMarks[line]\r\n      const res1 = isComponentBegin(state, start)\r\n      if (res1.check) {\r\n        if (res1.name) {\r\n          // 匹配到本模板的起始\r\n          // pos不包括前面的内容\r\n          // {|name|xxx|yyy|zzz...\r\n          //       ⬆\r\n          // pos指向'|'\r\n          //\r\n          if (markerBeginData) {\r\n            // 匹配到本模板开始\r\n            // 但已经存在本模板\r\n            // 为嵌套\r\n            //\r\n            markerLevel++\r\n          } else {\r\n            // 匹配到本模板开始\r\n            //\r\n            markerBeginData = {\r\n              markup: markerBegin,\r\n              pos: res1.pos as number,\r\n              line: line\r\n            }\r\n\r\n            // Since start is found, we can report success here in validation mode\r\n            //\r\n            if (silent) {\r\n              return {\r\n                check: true,\r\n                silent: true\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          // 匹配到模板开始，但是不是本模板\r\n          //\r\n          markerLevel++\r\n        }\r\n      } else {\r\n        if (markerBeginData === null) {\r\n          // 第一次就匹配失败\r\n          // 不是本组件\r\n          //\r\n          return {\r\n            check: false\r\n          }\r\n        }\r\n        // 没有匹配到模板开始\r\n        // 检查模板结束\r\n        const res2 = isComponentEnd(state, start)\r\n        if (res2.check) {\r\n          if (markerLevel === 0) {\r\n            markerEndData = {\r\n              markup: markerEnd,\r\n              line: line\r\n            }\r\n            // 匹配结束\r\n            //\r\n            if (lastDataDivisionLine !== -1) {\r\n              dataList.push({\r\n                lineBegin: lastDataDivisionLine + 1,\r\n                lineEnd: line\r\n              })\r\n            }\r\n            return {\r\n              configList: configList || [],\r\n              dataList,\r\n              check: true,\r\n              markerBeginData,\r\n              markerEndData\r\n            }\r\n          } else {\r\n            // 退出上层模板\r\n            //\r\n            markerLevel--\r\n          }\r\n        } else {\r\n          // 也没有匹配到模板结束\r\n          // 检查模板数据分隔符\r\n          //\r\n          const res3 = isDataDivision(state, start)\r\n          if (res3.check && markerLevel === 0) {\r\n            // 匹配到数据分隔符 且 是本组件的数据分割符\r\n            //\r\n            if (configList === null) {\r\n              // 还没有进行config设置\r\n              //\r\n              const configStr = state.src.slice(markerBeginData.pos, res3.pos)\r\n              configList = configStr\r\n                .split(configDivision)\r\n                .map((conf) => conf.trim())\r\n                .filter((conf) => conf !== '')\r\n              lastDataDivisionLine = line\r\n            } else {\r\n              // 已经进行config设置\r\n              //\r\n              if (line - lastDataDivisionLine <= 1) {\r\n                // 两个dataDivision没有间隔\r\n                // 无法获取data数据\r\n                // 跳过\r\n                //\r\n              } else {\r\n                // 存入data\r\n                // 闭 - 开\r\n                //\r\n                dataList.push({\r\n                  lineBegin: lastDataDivisionLine + 1,\r\n                  lineEnd: line\r\n                })\r\n              }\r\n              // 更新\r\n              //\r\n              lastDataDivisionLine = line\r\n            }\r\n          } else {\r\n            // 啥也没匹配到\r\n            //\r\n            continue\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      check: false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 解析配置项\r\n   * @param config\r\n   * @param configs\r\n   * @param i\r\n   * @returns\r\n   */\r\n  function analyseConfig(config: string, configs: ConfigsDict, i: number) {\r\n    const equalRegexp = /(?<!\\\\)=/g\r\n    const commaRegexp = /(?<!\\\\),/g\r\n\r\n    const equalRes = equalRegexp.exec(config)\r\n    equalRegexp.lastIndex = 0\r\n    const equalIndex = equalRes === null ? -1 : equalRes.index\r\n    const key = equalIndex === -1 ? i.toString() : config.slice(0, equalIndex).trim()\r\n    const value_ = equalIndex === -1 ? config : config.slice(equalIndex + 1).trim()\r\n    const value = []\r\n    let commaRes = commaRegexp.exec(value_)\r\n    let from = 0\r\n    while (commaRes !== null) {\r\n      value.push(value_.slice(from, commaRes.index).trim())\r\n      from = commaRes.index + 1\r\n      commaRes = commaRegexp.exec(value_)\r\n    }\r\n    value.push(value_.slice(from).trim())\r\n    commaRegexp.lastIndex = 0\r\n    //\r\n    // 允许使用=语法，且获取到=，且不是0=xxx的情况\r\n    //\r\n    if (useEqual && equalIndex !== -1 && Number.isNaN(Number(key))) {\r\n      //\r\n      // 找到该conf对应的conf\r\n      //\r\n      const trueKey = confMap.get(key)\r\n      if (trueKey === undefined) {\r\n        //\r\n        // 匹配失败不生效\r\n        //\r\n        return\r\n      } else {\r\n        configs[trueKey] = value\r\n        return\r\n      }\r\n    }\r\n    //\r\n    // 允许使用0=和直接下标映射语法，且key是数字\r\n    //\r\n    if (useIndex && !Number.isNaN(Number(key))) {\r\n      const index = Number(key)\r\n      if (configKeys[index] !== undefined) {\r\n        if (Array.isArray(configKeys[index])) {\r\n          configs[configKeys[index][0]] = value\r\n        } else {\r\n          configs[configKeys[index]] = value\r\n        }\r\n      } else {\r\n        configs[key] = value\r\n      }\r\n      return\r\n    }\r\n  }\r\n\r\n  function analyseConfigList(configList: string[]) {\r\n    const configs = {}\r\n    configList.forEach((config, i) => {\r\n      analyseConfig(config, configs, i)\r\n    })\r\n    return configs\r\n  }\r\n\r\n  function component(state: StateBlock, startLine: number, endLine: number, silent: boolean) {\r\n    const res = analyseData(state, startLine, endLine, silent)\r\n    if (!res.check) return false\r\n    if (res.silent !== undefined) return true\r\n\r\n    const oldParent = state.parentType\r\n    const oldLineMax = state.lineMax\r\n    state.parentType = 'blockquote'\r\n\r\n    // this will prevent lazy continuations from ever going past our end marker\r\n    state.lineMax = res.markerEndData.line\r\n\r\n    const token_o = state.push('component_' + name + '_open', 'div', 1)\r\n    token_o.markup = markerBegin\r\n    token_o.block = true\r\n    token_o.meta = {\r\n      configs: analyseConfigList(res.configList)\r\n    }\r\n    token_o.map = [res.markerBeginData.line, res.markerEndData.line]\r\n\r\n    res.dataList.forEach((data, i) => {\r\n      const start = state.bMarks[data.lineBegin] + state.tShift[data.lineBegin]\r\n      const end = state.bMarks[data.lineEnd] + state.tShift[data.lineEnd]\r\n      const dataSrc = state.src.slice(start, end)\r\n      let res\r\n      // if (dataCheck instanceof Function) {\r\n      //   res = dataCheck(dataSrc, i, {})\r\n      // }\r\n      // res 为false时直接跳过分隔符\r\n      // 但是其内部内容依旧会渲染\r\n      // 感觉res为false的可能性几乎没有\r\n      //\r\n      if (res === false) return\r\n\r\n      if (i > 0) {\r\n        // 添加数据分隔符token\r\n        //\r\n        const token_d = state.push('component_' + name + '_division', 'div', 0)\r\n        token_d.markup = dataDivision\r\n        token_d.meta = {\r\n          index: i\r\n        }\r\n      }\r\n      state.md.block.tokenize(state, data.lineBegin, data.lineEnd)\r\n    })\r\n\r\n    const token_c = state.push('component_' + name + '_close', 'div', -1)\r\n    token_c.markup = markerEnd\r\n    token_c.block = true\r\n\r\n    state.parentType = oldParent\r\n    state.lineMax = oldLineMax\r\n    state.line = res.markerEndData.line + 1\r\n    return true\r\n  }\r\n\r\n  md.block.ruler.before('fence', 'component_' + name, component, {\r\n    alt: ['paragraph', 'reference', 'blockquote', 'list']\r\n  })\r\n  md.renderer.rules['component_' + name + '_open'] = render\r\n  md.renderer.rules['component_' + name + '_close'] = render\r\n  md.renderer.rules['component_' + name + '_division'] = renderDivision\r\n}\r\n","import type MarkdownIt from 'markdown-it'\r\nimport type Token from 'markdown-it/lib/token.mjs'\r\nimport componentPlugin from '../plugin/component'\r\nimport type { ComponentPluginOptions } from '../plugin/component'\r\nfunction initClassifyComponentPlugin(md: MarkdownIt) {\r\n  md.use(componentPlugin, 'classify', {\r\n    render: function (tokens: Token[], idx: number) {\r\n      const token = tokens[idx]\r\n      if (token.nesting === 1) {\r\n        const name = Math.floor(Math.random() * 1000000).toString()\r\n        const configs = token.meta.configs\r\n        const classifies = configs.classifies || []\r\n        let inputs = ''\r\n        classifies.forEach((c: string, i: number) => {\r\n          const t =\r\n            '<div><label><input type=\"radio\" name=\"' +\r\n            name +\r\n            '\" value=\"' +\r\n            i.toString() +\r\n            '\" hidden ' +\r\n            (i === 0 ? 'checked' : '') +\r\n            '> ' +\r\n            c +\r\n            '</label></div>'\r\n          inputs += t\r\n        })\r\n        // opening tag\r\n        return (\r\n          '<div class=\"markdown-it-component-classify-container\">\\n<div class=\"markdown-it-component-classify\">\\n<div head>\\n' +\r\n          inputs +\r\n          '\\n</div>\\n<div body>\\n<div>\\n'\r\n        )\r\n      } else {\r\n        // closing tag\r\n        return '</div>\\n</div>\\n</div>\\n</div>\\n'\r\n      }\r\n    },\r\n    renderDivision: function (tokens: Token[], idx: number) {\r\n      return '</div>\\n<div>\\n'\r\n    },\r\n    init: function (options: ComponentPluginOptions) {\r\n      const size = 10\r\n      const styleId = 'markdown-it-classify-style'\r\n      let styleBase = `\r\n.markdown-it-component-classify-container {\r\n  border-radius: 8px;\r\n  border: 1px solid var(--bl-color-base-border);\r\n  overflow: hidden;\r\n  margin-bottom: 1rem;\r\n}\r\n.markdown-it-component-classify > div > div {\r\n  position: relative;\r\n}\r\n.markdown-it-component-classify > div[body] > div {\r\n  display: none;\r\n  padding: 0.5rem;\r\n}\r\n.markdown-it-component-classify > div[head] {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  background-color: var(--bl-color-light-fill);\r\n}\r\n.markdown-it-component-classify > div[head] > div > label {\r\n  padding: 0.5rem 1rem;\r\n  cursor: pointer;\r\n  transition: color 0.2s;\r\n  box-sizing: border-box;\r\n  display: block;\r\n  font-weight: bold;\r\n  color: var(--bl-color-secondary-text);\r\n}\r\n.markdown-it-component-classify > div[head] > div:nth-child(n + 2)::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%) translateX(-50%);\r\n  width: 1px;\r\n  height: 40%;\r\n  background-color: var(--bl-color-primary-text);\r\n}\r\n.markdown-it-component-classify > div[head] > div > label:has(input:checked) {\r\n  transition: color 0.2s;\r\n  color: var(--bl-color-primary-text);\r\n}\r\n.markdown-it-component-classify > div[head] > div > label:hover {\r\n  transition: color 0.2s;\r\n  color: var(--bl-color-primary-text);\r\n}\r\n.markdown-it-component-classify > div[body] > div > *:last-child {\r\n  margin-bottom: 0 !important;\r\n}\r\n\r\n      `\r\n      for (let i = 1; i <= size; i++) {\r\n        if (i > 1) styleBase += ',\\n'\r\n        styleBase += `.markdown-it-component-classify:has( > div[head] > div:nth-child(${i}) > label > input:checked) > div[body] > div:nth-child(${i})`\r\n      }\r\n      styleBase += ` {\r\n  display: block;\r\n}\r\n      `\r\n      if (!document.getElementById(styleId)) {\r\n        const style = document.createElement('style')\r\n        style.setAttribute('id', styleId)\r\n        style.setAttribute('type', 'text/css')\r\n        style.innerHTML = styleBase.trim()\r\n        const head = document.head || document.getElementsByTagName('head')[0]\r\n        head.appendChild(style)\r\n      }\r\n    },\r\n    configKeys: ['classifies']\r\n  })\r\n}\r\n\r\nexport default [initClassifyComponentPlugin]\r\n","import type MarkdownIt from 'markdown-it'\r\nimport type Token from 'markdown-it/lib/token.mjs'\r\nimport type Renderer from 'markdown-it/lib/renderer.mjs'\r\nimport type { Options } from 'markdown-it'\r\nimport type StateInline from 'markdown-it/lib/rules_inline/state_inline.mjs'\r\n\r\ntype ConfigKey = string | string[]\r\n\r\nexport interface TemplatePluginOptions {\r\n  tokenizePos?: number[] | boolean\r\n  markerBegin?: string\r\n  markerEnd?: string\r\n  markerDivision?: string\r\n  useEqual?: boolean\r\n  useIndex?: boolean\r\n  configKeys?: ConfigKey[]\r\n  render?: (tokens: Token[], idx: number, _options: Options, env: any, slf: Renderer) => string\r\n  renderDivision?: (\r\n    tokens: Token[],\r\n    idx: number,\r\n    _options: Options,\r\n    env: any,\r\n    slf: Renderer\r\n  ) => string\r\n}\r\n\r\ntype DivisionData = {\r\n  begin: number\r\n  end: number\r\n}\r\n\r\ntype FindEndRes = {\r\n  check: boolean\r\n  pos?: number\r\n  divisionDataList?: DivisionData[]\r\n}\r\n\r\ntype ConfigsDict = {\r\n  [property: string]: string | string[]\r\n}\r\n\r\n/**\r\n * ## MD模板\r\n * 默认模板格式如下：`{{name|some words ....|config1|config2=xxx|config3=a,b,c,...}}`\r\n *\r\n * 1. tokenize默认为第二位(index = 1)\r\n * 2. 第一个位置必须是name且不会进行解析\r\n * 3. 可以通过设置tokenizePos进行不同位置的解析，为true则全部都解析，false等价于[1]\r\n * 3. 当tokenizePos超过一个时，会自动生成token: template_name_division\r\n * 4. 不属于tokenizePos的内容将会加入configData\r\n * 5. 模板名字请不要重复\r\n *\r\n * ## options\r\n *\r\n * ```ts\r\n * interface TemplatePluginOptions {\r\n *   markerBegin?: string // 匹配起始标识符 默认: {{\r\n *   markerEnd?: string // 匹配结束标识符 默认: }}\r\n *   markerDivision?: string // 配置项分割标识符 默认: {{\r\n *   useEqual?: boolean // 是否启用=判定，启用则支持语法: configKey1=abc => { configKey1: abc }\r\n *   useIndex?: boolean // 是否启用下标顺序判定，启用则支持语法: 1=abc 从1开始!!\r\n *   // => 1. 设置了configKeys=['configKey1'] => { configKey1: abc }\r\n *   // => 2. 没有设置configKeys => { '1': abc }\r\n *   configKeys?: configKey[] // 设置配置项选择值，便于数据读取\r\n *   // 需要注意conf字符串不能是数字，不能是: '100'\r\n *   // ['conf1', 'conf2'] 设置两个conf，其分别对应1和2\r\n *   // [['conf1-1', 'conf1-2'], 'conf2'] 设置两个conf，但是输入: conf1-2=abc\\1=abc\\abc => { 'conf1-1': abc },会以数组中第一个进行替换\r\n *   render?: (tokens: Token[], idx: number, _options: Options, env: any, slf: Renderer) => string 自定义渲染函数\r\n *   renderDivision?: (tokens: Token[], idx: number, _options: Options, env: any, slf: Renderer) => string 自定义分割渲染函数\r\n * }\r\n * ```\r\n *\r\n * @param md md\r\n * @param name 模板名字\r\n * @param options 配置项\r\n */\r\nexport default function templatePlugin(\r\n  md: MarkdownIt,\r\n  name: string | string[],\r\n  options?: TemplatePluginOptions\r\n) {\r\n  function renderDefault(tokens: Token[], idx: number, _options: Options, env: any, slf: Renderer) {\r\n    return slf.renderToken(tokens, idx, _options)\r\n  }\r\n\r\n  function renderDivisionDefault(\r\n    tokens: Token[],\r\n    idx: number,\r\n    _options: Options,\r\n    env: any,\r\n    slf: Renderer\r\n  ) {\r\n    return slf.renderToken(tokens, idx, _options)\r\n  }\r\n\r\n  options = options || {}\r\n\r\n  const defaultName = Array.isArray(name) ? name[0] : name\r\n  const namesSet = new Set(Array.isArray(name) ? name : [name])\r\n\r\n  const tokenizePos = options.tokenizePos || [1]\r\n\r\n  const markerBegin = options.markerBegin || '{{'\r\n  const markerEnd = options.markerEnd || '}}'\r\n  const markerDivision = options.markerDivision || '|'\r\n  //\r\n  // 为true则支持语法：config1 = xxx\r\n  //\r\n  const useEqual = options.useEqual || true\r\n  //\r\n  // 0 = xxx\r\n  // xxx\r\n  // ->\r\n  // 0: xxx\r\n  //\r\n  const useIndex = options.useIndex || false\r\n  //\r\n  // config keys\r\n  // 设置这个才能更好的使用 0=xxx\r\n  // 例如: 设置[\"color\"];md中写0=red\r\n  // 获得: { \"color\": \"red\" }\r\n  // 否则获得: { \"0\": \"red\" }\r\n  //\r\n  const configKeys = options.configKeys || []\r\n  //\r\n  // 配置映射关系\r\n  //\r\n  const confMap = buildConfMap(configKeys)\r\n\r\n  const render = options.render || renderDefault\r\n\r\n  const renderDivision = options.renderDivision || renderDivisionDefault\r\n\r\n  function buildConfMap(configKeys: ConfigKey[]) {\r\n    const map = new Map<string, string>()\r\n    configKeys.forEach((conf) => {\r\n      if (Array.isArray(conf)) {\r\n        const base = conf[0]\r\n        conf.forEach((c) => {\r\n          map.set(base, c)\r\n        })\r\n      } else {\r\n        map.set(conf, conf)\r\n      }\r\n    })\r\n    return map\r\n  }\r\n\r\n  /**\r\n   * 找结束位置\r\n   * @param state\r\n   * @returns\r\n   */\r\n  function findEnd(state: StateInline): FindEndRes {\r\n    const max = state.posMax\r\n    let pos = state.pos + markerBegin.length\r\n    let level = 0\r\n    let lastDivisionPos = pos\r\n    const divisionDataList = []\r\n    while (pos < max) {\r\n      if (markerBegin === state.src.slice(pos, pos + markerBegin.length)) {\r\n        level++\r\n      } else if (markerEnd === state.src.slice(pos, pos + markerEnd.length)) {\r\n        if (level === 0) {\r\n          divisionDataList.push({\r\n            begin: lastDivisionPos,\r\n            end: pos\r\n          })\r\n          return {\r\n            check: true,\r\n            pos,\r\n            divisionDataList\r\n          }\r\n        } else level--\r\n      } else if (markerDivision === state.src.slice(pos, pos + markerDivision.length)) {\r\n        if (level === 0) {\r\n          divisionDataList.push({\r\n            begin: lastDivisionPos,\r\n            end: pos\r\n          })\r\n          lastDivisionPos = pos + 1\r\n        }\r\n      }\r\n      pos++\r\n    }\r\n    return {\r\n      check: false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 解析配置项\r\n   * @param config\r\n   * @param configs\r\n   * @param i\r\n   * @returns\r\n   */\r\n  function analyseConfig(config: string, configs: ConfigsDict, i: number) {\r\n    // console.log('analyseConfig', config, i)\r\n    const equalRegexp = /(?<!\\\\)=/g\r\n    const commaRegexp = /(?<!\\\\),/g\r\n\r\n    const equalRes = equalRegexp.exec(config)\r\n    equalRegexp.lastIndex = 0\r\n    const equalIndex = equalRes === null ? -1 : equalRes.index\r\n    const key = equalIndex === -1 ? i.toString() : config.slice(0, equalIndex).trim()\r\n    const value_ = equalIndex === -1 ? config : config.slice(equalIndex + 1).trim()\r\n    const value = []\r\n    let commaRes = commaRegexp.exec(value_)\r\n    let from = 0\r\n    while (commaRes !== null) {\r\n      value.push(value_.slice(from, commaRes.index).trim())\r\n      from = commaRes.index + 1\r\n      commaRes = commaRegexp.exec(value_)\r\n    }\r\n    value.push(value_.slice(from).trim())\r\n    commaRegexp.lastIndex = 0\r\n    //\r\n    // 允许使用=语法，且获取到=，且不是0=xxx的情况\r\n    //\r\n    if (useEqual && equalIndex !== -1 && Number.isNaN(Number(key))) {\r\n      //\r\n      // 找到该conf对应的conf\r\n      //\r\n      const trueKey = confMap.get(key)\r\n      if (trueKey === undefined) {\r\n        //\r\n        // 匹配失败不生效\r\n        //\r\n        return\r\n      } else {\r\n        configs[trueKey] = value\r\n        return\r\n      }\r\n    }\r\n    //\r\n    // 允许使用0=和直接下标映射语法，且key是数字\r\n    //\r\n    if (useIndex && !Number.isNaN(Number(key))) {\r\n      const index = Number(key)\r\n      if (configKeys[index] !== undefined) {\r\n        if (Array.isArray(configKeys[index])) {\r\n          configs[configKeys[index][0]] = value\r\n        } else {\r\n          configs[configKeys[index]] = value\r\n        }\r\n      } else {\r\n        configs[key] = value\r\n      }\r\n      return\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 插件核心\r\n   * @param state\r\n   * @param slient\r\n   * @returns\r\n   */\r\n  function template(state: StateInline, slient: boolean) {\r\n    const max = state.posMax // src长度\r\n    const start = state.pos\r\n\r\n    if (markerBegin !== state.src.slice(start, start + markerBegin.length)) {\r\n      return false\r\n    }\r\n    //\r\n    // 找结束\r\n    // posEnd指向结束符号开始的位置\r\n    // }}\r\n    // ⬆\r\n    //\r\n    const endRes = findEnd(state)\r\n\r\n    if (!endRes.check) {\r\n      return false\r\n    }\r\n    //\r\n    // check为true下面都存在\r\n    //\r\n    const end = endRes.pos as number\r\n    const divisionDataList = endRes.divisionDataList as DivisionData[]\r\n\r\n    if (\r\n      divisionDataList.length < 1 ||\r\n      !namesSet.has(state.src.slice(divisionDataList[0].begin, divisionDataList[0].end).trim())\r\n    ) {\r\n      return false\r\n    }\r\n    //\r\n    // found\r\n    //\r\n    const tStart = start + markerBegin.length\r\n    const tEnd = end\r\n\r\n    const configs = {}\r\n\r\n    let tokenizeAmount = 0\r\n\r\n    if (!slient) {\r\n      state.pos = tStart\r\n      state.posMax = tEnd\r\n\r\n      const token_o = state.push('template_' + defaultName + '_open', 'span', 1)\r\n\r\n      let configIndex = 0\r\n\r\n      divisionDataList.forEach((data, i) => {\r\n        if (i === 0) return\r\n        state.pos = data.begin\r\n        state.posMax = data.end\r\n        if (tokenizePos === true || (Array.isArray(tokenizePos) && tokenizePos.indexOf(i) !== -1)) {\r\n          if (tokenizeAmount > 0) state.push('template_' + defaultName + '_division', '', 0)\r\n          state.md.inline.tokenize(state)\r\n          tokenizeAmount++\r\n        } else {\r\n          analyseConfig(state.src.slice(data.begin, data.end), configs, configIndex++)\r\n        }\r\n      })\r\n\r\n      token_o.meta = {\r\n        configs\r\n      }\r\n\r\n      state.push('template_' + defaultName + '_close', 'span', -1)\r\n    }\r\n\r\n    state.pos = end + markerEnd.length\r\n    state.posMax = max\r\n    return true\r\n  }\r\n\r\n  md.inline.ruler.after('emphasis', 'template_' + defaultName, template)\r\n\r\n  md.renderer.rules['template_' + defaultName + '_open'] = render\r\n  md.renderer.rules['template_' + defaultName + '_close'] = render\r\n  md.renderer.rules['template_' + defaultName + '_division'] = renderDivision\r\n}\r\n","import type MarkdownIt from 'markdown-it'\r\nimport templatePlugin from '../plugin/template'\r\nimport type Token from 'markdown-it/lib/token.mjs'\r\nimport type { MdRenderer } from '..'\r\nfunction initUnderlineTemplatePlugin(md: MarkdownIt) {\r\n  md.use(templatePlugin, 'und', {\r\n    useIndex: true,\r\n    configKeys: ['type'],\r\n    render: function (tokens: Token[], idx: number) {\r\n      const token = tokens[idx]\r\n      const colorDict: { [key: string]: string } = {\r\n        default: 'transparent',\r\n        warning: '#f89898D0',\r\n        success: '#95d475D0',\r\n        r: 'var(--bl-color-md-plugin-underline-r)',\r\n        g: 'var(--bl-color-md-plugin-underline-g)',\r\n        b: 'var(--bl-color-md-plugin-underline-b)',\r\n        y: 'var(--bl-color-md-plugin-underline-y)'\r\n      }\r\n      if (token.nesting === 1) {\r\n        const configs = token.meta.configs\r\n        const colorType = (configs['type'] && configs['type'][0]) || 'default' // name, content, color\r\n        const color = colorDict[colorType.trim()] || colorType.trim()\r\n        const style = `background: linear-gradient(transparent 70%, ${color} 0%);`\r\n        return `<span style=\"${style}\">`\r\n      } else {\r\n        return '</span>'\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nfunction initBackgroundTemplatePlugin(md: MarkdownIt) {\r\n  md.use(templatePlugin, 'bgc', {\r\n    useIndex: true,\r\n    configKeys: ['type'],\r\n    render: function (tokens: Token[], idx: number) {\r\n      const token = tokens[idx]\r\n      const colorDict: { [key: string]: string } = {\r\n        default: 'transparent',\r\n        warning: '#f89898D0',\r\n        success: '#95d475D0',\r\n        r: 'var(--bl-color-md-plugin-underline-r)',\r\n        g: 'var(--bl-color-md-plugin-underline-g)',\r\n        b: 'var(--bl-color-md-plugin-underline-b)',\r\n        y: 'var(--bl-color-md-plugin-underline-y)'\r\n      }\r\n      if (token.nesting === 1) {\r\n        const configs = token.meta.configs\r\n        const colorType = (configs['type'] && configs['type'][0]) || 'default' // name, content, color\r\n        const color = colorDict[colorType.trim()] || colorType.trim()\r\n        const style = `background-color: ${color};`\r\n        return `<span style=\"${style}\">`\r\n      } else {\r\n        return '</span>'\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nfunction initTranslateTemplatePlugin(md: MarkdownIt) {\r\n  md.use(templatePlugin, 'tran', {\r\n    useIndex: true,\r\n    configKeys: ['from', 'to'],\r\n    render: function (tokens: Token[], idx: number) {\r\n      const token = tokens[idx]\r\n      if (token.nesting === 1) {\r\n        const name = Math.floor(Math.random() * 1000000).toString()\r\n        const configs = token.meta.configs\r\n        const from = (configs['from'] && configs['from'][0]) || '原文:'\r\n        const to = (configs['to'] && configs['to'][0]) || '译文:'\r\n        const input = `<label data-from=\"${from}\" data-to=\"${to}\" class=\"md-template-translate__label\"><input type=\"checkbox\" name=\"${name}\" hidden ></label>`\r\n        return '<span class=\"md-template-translate\">' + input + '<span>'\r\n      } else {\r\n        return '</span></span>'\r\n      }\r\n    },\r\n    renderDivision: function (token: Token[], idx: number) {\r\n      return '</span><span>'\r\n    },\r\n    tokenizePos: [1, 2]\r\n  })\r\n}\r\n\r\nfunction initObsidianLinkTemplatePlugin(md: MarkdownIt, elflandRenderer: MdRenderer) {\r\n  md.use(templatePlugin, 'link', {\r\n    useIndex: true,\r\n    configKeys: ['name'],\r\n    render: function (tokens: Token[], idx: number) {\r\n      const token = tokens[idx]\r\n      if (token.nesting === 1) {\r\n        const configs = token.meta.configs\r\n        const name = (configs['name'] && configs['name'][0]) || 'Error'\r\n        const path = elflandRenderer.article.getPathByTitle(name)\r\n        const className = path === '' ? '' : 'cursor-pointer text-moonlight-500 hover:underline'\r\n        const title = path === '' ? '' : window.location.protocol + '//' + window.location.host + '/blog/' + path\r\n        return `<span class=\"${className}\" md=\"obsidian-link\" path=\"${path}\" title=${title}>` + name\r\n      } else {\r\n        return '</span>'\r\n      }\r\n    },\r\n    renderDivision: function (token: Token[], idx: number) {\r\n      return '</span><span>'\r\n    },\r\n    tokenizePos: []\r\n  })\r\n}\r\n\r\nexport default [\r\n  initUnderlineTemplatePlugin,\r\n  initBackgroundTemplatePlugin,\r\n  initTranslateTemplatePlugin,\r\n  initObsidianLinkTemplatePlugin\r\n]\r\n","import type MarkdownIt from 'markdown-it'\r\nimport templatePlugin from '../plugin/template'\r\nimport type Token from 'markdown-it/lib/token.mjs'\r\nimport type { MdRenderer } from '..'\r\n\r\nfunction initTemplateTestPlugin1(md: MarkdownIt, elflandRenderer: MdRenderer) {\r\n  md.use(templatePlugin, 'template-name-1', {\r\n    configKeys: ['type'],\r\n    render: function (tokens: Token[], idx: number) {\r\n      const token = tokens[idx]\r\n      const colorDict: Record<string, string> = {\r\n        default: 'transparent',\r\n        warning: '#F56C6C',\r\n        success: '#67C23A'\r\n      }\r\n      if (token.nesting === 1) {\r\n      // opening tag\r\n        const configs = token.meta.configs\r\n        // 用户配置项\r\n        console.log('template-name-1 configs', configs)\r\n        const colorType = (configs['type'] && configs['type'][0]) || 'default'\r\n        const color = colorDict[colorType.trim()] || colorType.trim()\r\n        const style = `background-color: ${color};`\r\n        return `<span style=\"${style}\">`\r\n      } else {\r\n      // closing tag\r\n        return '</span>'\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nfunction initTemplateTestPlugin2(md: MarkdownIt, elflandRenderer: MdRenderer) {\r\n  md.use(templatePlugin, 'template-name-2', {\r\n    configKeys: ['chars', 'color'],\r\n    render: function (tokens: Token[], idx: number) {\r\n      const token = tokens[idx]\r\n      if (token.nesting === 1) {\r\n      // opening tag\r\n        const configs = token.meta.configs\r\n        console.log('template-name-2 configs', configs)\r\n        const charsConf = (configs['chars']) || []\r\n        const color = (configs['color']) || ''\r\n        const chars = charsConf.join('-')\r\n        return `<span style=\"color: ${color}\">${chars}`\r\n      } else {\r\n      // closing tag\r\n        return '</span>'\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nfunction initTemplateTestPlugin3(md: MarkdownIt, elflandRenderer: MdRenderer) {\r\n  md.use(templatePlugin, 'template-name-3', {\r\n    configKeys: ['chars', 'color'],\r\n    useIndex: true,\r\n    render: function (tokens: Token[], idx: number) {\r\n      const token = tokens[idx]\r\n      if (token.nesting === 1) {\r\n      // opening tag\r\n        const configs = token.meta.configs\r\n        console.log('template-name-3 configs', configs)\r\n        const charsConf = (configs['chars']) || []\r\n        const color = (configs['color']) || ''\r\n        const chars = charsConf.join('-')\r\n        return `<span style=\"color: ${color}\">${chars}`\r\n      } else {\r\n      // closing tag\r\n        return '</span>'\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nfunction initTemplateTestPlugin4(md: MarkdownIt, elflandRenderer: MdRenderer) {\r\n  md.use(templatePlugin, 'template-name-4', {\r\n    configKeys: ['chars', 'color'],\r\n    tokenizePos: [], // 全部禁止解析\r\n    useIndex: true,\r\n    render: function (tokens: Token[], idx: number) {\r\n      const token = tokens[idx]\r\n      if (token.nesting === 1) {\r\n      // opening tag\r\n        const configs = token.meta.configs\r\n        console.log('template-name-4 configs', configs)\r\n        const charsConf = (configs['chars']) || []\r\n        const color = (configs['color']) || ''\r\n        const chars = charsConf.join('-')\r\n        return `<span style=\"color: ${color}\">${chars}`\r\n      } else {\r\n      // closing tag\r\n        return '</span>'\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport default [\r\n  initTemplateTestPlugin1,\r\n  initTemplateTestPlugin2,\r\n  initTemplateTestPlugin3,\r\n  initTemplateTestPlugin4\r\n]\r\n","import Container from './Container'\r\nimport EmojiAnchorTocKatex from './EmojiAnchorTocKatex'\r\nimport FootnoteAbbrSubSupUml from './FootnoteAbbrSubSupUml'\r\nimport Image from './Image'\r\nimport Layout from './Layout'\r\nimport Component from './Component'\r\nimport Template from './Template'\r\n\r\nimport TemplateForTest from './TemplateForTest'\r\n\r\nimport type MarkdownIt from 'markdown-it'\r\n\r\nconst plugins = [\r\n  ...Container,\r\n  ...EmojiAnchorTocKatex,\r\n  ...FootnoteAbbrSubSupUml,\r\n  ...Image,\r\n  ...Layout,\r\n  ...Component,\r\n  ...Template,\r\n\r\n  ...TemplateForTest\r\n]\r\n\r\nexport default function init(md: MarkdownIt, elflandRenderer: any, meta: any) {\r\n  plugins.forEach((func) => {\r\n    func(md, elflandRenderer, meta)\r\n  })\r\n}\r\n","import MarkdownIt from 'markdown-it'\r\nimport hljs from 'highlight.js/lib/core'\r\nimport init from './init'\r\nimport { generateRandomStringBase, localGet } from '@/core/elfland/utils'\r\nimport type { Article } from '..'\r\n\r\nimport javascript from 'highlight.js/lib/languages/javascript'\r\nimport typescript from 'highlight.js/lib/languages/typescript'\r\nimport css from 'highlight.js/lib/languages/css'\r\nimport xml from 'highlight.js/lib/languages/xml'\r\nimport c from 'highlight.js/lib/languages/c'\r\nimport cmake from 'highlight.js/lib/languages/cmake'\r\nimport cpp from 'highlight.js/lib/languages/cpp'\r\nimport markdown from 'highlight.js/lib/languages/markdown'\r\nimport json from 'highlight.js/lib/languages/json'\r\nimport latex from 'highlight.js/lib/languages/latex'\r\nimport python from 'highlight.js/lib/languages/python'\r\nimport yaml from 'highlight.js/lib/languages/yaml'\r\nimport hljsDefineVue from 'highlightjs-vue'\r\n\r\nhljs.registerLanguage('javascript', javascript)\r\nhljs.registerLanguage('typescript', typescript)\r\nhljs.registerLanguage('css', css)\r\nhljs.registerLanguage('xml', xml)\r\nhljs.registerLanguage('c', c)\r\nhljs.registerLanguage('cmake', cmake)\r\nhljs.registerLanguage('cpp', cpp)\r\nhljs.registerLanguage('markdown', markdown)\r\nhljs.registerLanguage('json', json)\r\nhljs.registerLanguage('latex', latex)\r\nhljs.registerLanguage('python', python)\r\nhljs.registerLanguage('yaml', yaml)\r\nhljsDefineVue(hljs)\r\nhljs.registerLanguage('html', xml)\r\n\r\nexport class MdRenderer {\r\n  static readonly CODE_SCROLL_KEY = 'md-code-scroll'\r\n  private md: MarkdownIt\r\n  readonly article: Article\r\n  private generateRandomString = generateRandomStringBase()\r\n\r\n  private codeScroll = localGet(MdRenderer.CODE_SCROLL_KEY, false) === 'true'\r\n  private svg =\r\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1024 1024\" ><path fill=\"currentColor\" d=\"M128 320v576h576V320zm-32-64h640a32 32 0 0 1 32 32v640a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V288a32 32 0 0 1 32-32M960 96v704a32 32 0 0 1-32 32h-96v-64h64V128H384v64h-64V96a32 32 0 0 1 32-32h576a32 32 0 0 1 32 32M256 672h320v64H256zm0-192h320v64H256z\"></path></svg>'\r\n  private svgCodeScroll =\r\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1024 1024\" ><path fill=\"currentColor\" d=\"M511.552 128c-35.584 0-64.384 28.8-64.384 64.448v516.48L274.048 570.88a94.272 94.272 0 0 0-112.896-3.456 44.416 44.416 0 0 0-8.96 62.208L332.8 870.4A64 64 0 0 0 384 896h512V575.232a64 64 0 0 0-45.632-61.312l-205.952-61.76A96 96 0 0 1 576 360.192V192.448C576 156.8 547.2 128 511.552 128M359.04 556.8l24.128 19.2V192.448a128.448 128.448 0 1 1 256.832 0v167.744a32 32 0 0 0 22.784 30.656l206.016 61.76A128 128 0 0 1 960 575.232V896a64 64 0 0 1-64 64H384a128 128 0 0 1-102.4-51.2L101.056 668.032A108.416 108.416 0 0 1 128 512.512a158.272 158.272 0 0 1 185.984 8.32z\"></path></svg>'\r\n\r\n  constructor(article: Article) {\r\n    this.article = article\r\n    this.md = new MarkdownIt({\r\n      breaks: true,\r\n      linkify: true,\r\n      highlight: (str, lang) => {\r\n        lang = lang.trim()\r\n        const spaceI = lang.indexOf(':')\r\n        const detail = spaceI === -1 ? '' : lang.slice(spaceI + 1)\r\n        lang = spaceI === -1 ? lang : lang.slice(0, spaceI)\r\n        const codeIndex = this.generateRandomString()\r\n        const button = `<span class=\"md-code-btn md-copy-btn select-none\" title=\"点击复制\" type=\"button\" data-clipboard-action=\"copy\" data-clipboard-target=\"#copy${codeIndex}\">${this.svg}</span>`\r\n        const codeScroll = `<span class=\"md-code-btn select-none\" md=\"codeScroll\" title=\"调整代码块最大高度\" ${this.codeScroll ? 'checked' : ''}>${this.svgCodeScroll}</span>`\r\n        const showLang = '<span>' + this.getLang(lang) + '</span>'\r\n        const showDetail = `<span>${detail}</span>`\r\n        const code = this.md.utils.escapeHtml(str)\r\n        let codeHtml = code\r\n        if (lang && hljs.getLanguage(lang)) {\r\n          try {\r\n            codeHtml = hljs.highlight(str, { language: lang, ignoreIllegals: true }).value\r\n          } catch (_) {\r\n            //\r\n          }\r\n        }\r\n\r\n        const headLeft = `<div>${showLang}${showDetail}</div>`\r\n        const headRight = `<div>${codeScroll}${button}</div>`\r\n\r\n        const codeLable = `<pre class=\"hljs\">${codeHtml}<code></code></pre>`\r\n        const headLabel = `<div>${headLeft}${headRight}</div>`\r\n        const copyCode = `<textarea style=\"position: absolute;top: -9999px;left: -9999px;z-index: -9999;\" id=\"copy${codeIndex}\">${code}</textarea>`\r\n\r\n        const codeAll = `<div class=\"hljs-container\">${headLabel}${codeLable}${copyCode}</div>`\r\n        //\r\n        // 使用div开头，需要去markdown-it源代码中修改\r\n        // node_modules\\markdown-it\\lib\\renderer.mjs\r\n        // 48行 改为：if (highlighted.indexOf('<pre') === 0 || highlighted.indexOf('<div') === 0)\r\n        //\r\n        return codeAll\r\n      }\r\n    })\r\n    this.init()\r\n  }\r\n\r\n  /**\r\n   * md to html\r\n   * @param str md文档字符串\r\n   * @returns md解析出来的结果\r\n   */\r\n  render(str: string) {\r\n    function scrollToHash() {\r\n      const hash = location.hash.slice(1)   // 去掉 #\r\n      if (!hash) return\r\n\r\n      // 等渲染完成，保险起见用 nextTick / setTimeout\r\n      requestAnimationFrame(() => {\r\n        const el = document.getElementById(hash) || document.querySelector(`[id=\"${hash}\"]`)\r\n        if (el) {\r\n          el.scrollIntoView({ behavior: 'smooth' })\r\n        }\r\n      })\r\n    }\r\n    scrollToHash()\r\n    return this.md.render(str)\r\n  }\r\n\r\n  private getLang(lang: string) {\r\n    lang = lang || ''\r\n    if (lang === '') return lang\r\n    // lang = lang.toLocaleLowerCase()\r\n    // lang = lang.slice(0, 1).toLocaleUpperCase() + lang.slice(1)\r\n    const dict: { [property: string]: string } = {\r\n      // Javascript: 'JS',\r\n      // Js: 'JS',\r\n      // Css: 'CSS',\r\n      // Md: 'markdown',\r\n      // Cpp: 'CPP'\r\n    }\r\n    return dict[lang] || lang\r\n  }\r\n\r\n  private init() {\r\n    init(this.md, this, {\r\n      baseUrl: window.location.protocol + '//' + window.location.host\r\n    })\r\n  }\r\n\r\n  renderToc(tocHtml: any, ast: any) {\r\n    this.article.mdTocString = JSON.stringify(ast)\r\n    // console.log('renderToc', tocHtml, ast)\r\n  }\r\n}\r\n","import type { Article as ArticleDetail } from '@/core/elfland-addon-articles/core/article'\r\nimport type { Elfland } from '@/core/elfland/core'\r\nimport { ElflandAddon } from '@/core/elfland/core/addon-base'\r\nimport type { RouterPromiseSyncFuncRes } from '@/core/elfland/types'\r\nimport { localGet, localSet, LRUCache, message } from '@/core/elfland/utils'\r\nimport { computed, ref } from 'vue'\r\nimport type { ComputedRef, Ref } from 'vue'\r\nimport type { RouteLocationNormalized, RouteLocationRaw } from 'vue-router'\r\nimport { MdRenderer } from './renderer'\r\nimport type { ResTocItem } from '../types'\r\nimport Clipboard from 'clipboard'\r\nimport Selector from '@/core/elfland/utils/selector'\r\n\r\nexport class Article extends ElflandAddon {\r\n  private __path: Ref<string> = ref('')\r\n  private __articleLRUCache: LRUCache<string, ArticleDetail> = new LRUCache(20)\r\n  private __mdRenderer = new MdRenderer(this)\r\n  private __mdTocString: Ref<string> = ref('')\r\n  private __clipboard: Clipboard\r\n  private __selector: Selector\r\n\r\n  get article() {\r\n    return computed(() => {\r\n      return this.__articleLRUCache.get(this.__path.value) || null\r\n    })\r\n  }\r\n\r\n  get renderedMd() {\r\n    return computed(() => {\r\n      const article = this.article.value\r\n      if (article === null) return ''\r\n      return this.__mdRenderer.render(article.body)\r\n    })\r\n  }\r\n\r\n  get mdTocString() {\r\n    return this.__mdTocString.value\r\n  }\r\n\r\n  set mdTocString(str: string) {\r\n    this.__mdTocString.value = str\r\n  }\r\n\r\n  get rendererMdToc(): ComputedRef<ResTocItem[]> {\r\n    return computed(() => {\r\n      type TocItem = {\r\n        l: number,\r\n        n: string,\r\n        c: TocItem[]\r\n      }\r\n      const titleMap: Map<string, number> = new Map()\r\n      const tocString = this.__mdTocString.value\r\n      const tocJson = JSON.parse(tocString) as TocItem\r\n      const res: ResTocItem[] = []\r\n      const dfs = (toc: TocItem) => {\r\n        let title = encodeURIComponent(toc.n.trim().replace(/\\ /g, '-').toLowerCase())\r\n        if (!titleMap.has(toc.n)) titleMap.set(toc.n, 1)\r\n        else {\r\n          title += `-${titleMap.get(toc.n)}`\r\n          titleMap.set(toc.n, titleMap.get(toc.n)! + 1)\r\n        }\r\n        const r: ResTocItem = {\r\n          l: toc.l,\r\n          n: toc.n.trim(),\r\n          a: '#' + title\r\n        }\r\n        res.push(r)\r\n        toc.c.forEach(n => dfs(n))\r\n      }\r\n      dfs(tocJson)\r\n      res.shift()\r\n      return res\r\n    })\r\n  }\r\n\r\n  constructor(elfland: Elfland) {\r\n    super(elfland)\r\n\r\n    elfland.routerPromise.addCheck(this.check, this)\r\n    elfland.routerPromise.addPostcheck(this.postcheck, this)\r\n    this.__clipboard = new Clipboard('.md-copy-btn')\r\n    this.__clipboard.on('success', (e) => {\r\n      message('复制成功', 'success')\r\n    })\r\n    this.__clipboard.on('error', (e) => {\r\n      message('复制失败')\r\n    })\r\n    this.__selector = new Selector([\r\n      ['click', '.markdown-body span[md=\"codeScroll\"]', 'clickCodeScroll', { childrenEvent: true }],\r\n      ['touchstart', '.markdown-body span[md=\"codeScroll\"]', 'clickCodeScroll', { childrenEvent: true }],\r\n      ['click', '.markdown-body span[md=\"obsidian-link\"]', 'clickObsidianLink', { childrenEvent: true }],\r\n      ['touchstart', '.markdown-body span[md=\"obsidian-link\"]', 'clickObsidianLink', { childrenEvent: true }]\r\n    ])\r\n    this.__selector.on('clickCodeScroll', (e) => {\r\n      const codeScroll = localGet(MdRenderer.CODE_SCROLL_KEY, false) === 'true'\r\n      localSet(MdRenderer.CODE_SCROLL_KEY, !codeScroll)\r\n      const eles = document.querySelectorAll('.markdown-body span[md=\"codeScroll\"]')\r\n      for (let i = 0; i < eles.length; i++) {\r\n        if (codeScroll) eles[i].removeAttribute('checked')\r\n        else eles[i].setAttribute('checked', '')\r\n      }\r\n    })\r\n    this.__selector.on('clickObsidianLink', (e) => {\r\n      const ele = e.element\r\n      const path = ele.getAttribute('path')\r\n      if (path === '') return\r\n      window.scrollTo(0, 0)\r\n      this.__elfland.routerPromise.router.push(path)\r\n    })\r\n  }\r\n\r\n  logoutCallback(): void {}\r\n\r\n  getPathByTitle(title: string) {\r\n    const art = this.__elfland.articles.getIdAndPath(title)\r\n    return art.path\r\n  }\r\n\r\n  private async check(\r\n    to: RouteLocationNormalized,\r\n    from: RouteLocationNormalized\r\n  ): Promise<RouteLocationRaw | void> {\r\n    if (!this.is(to, 'article')) return\r\n    const path = to.params.articlePath\r\n    if (typeof path !== 'string') return { name: '404' }\r\n    await this.__elfland.articles.waitingDataGet\r\n    const art = this.__elfland.articles.getArticleByPath(path)\r\n    if (art === null) return { name: '404' }\r\n    this.__articleLRUCache.set(path, art)\r\n  }\r\n\r\n  private postcheck(to: RouteLocationNormalized, from: RouteLocationNormalized): RouterPromiseSyncFuncRes {\r\n    if (!this.is(to, 'article')) return\r\n    const path = to.params.articlePath\r\n    if (typeof path !== 'string') return\r\n    this.__path.value = path\r\n  }\r\n}\r\n","import type { ProjectDataItem } from '@/core/elfland-addon-data'\r\n\r\nexport class Project {\r\n  readonly name: string\r\n  readonly category: string\r\n  readonly author?: string\r\n  readonly contributors?: string[]\r\n  readonly role?: string\r\n  readonly description: string\r\n  readonly notes?: string\r\n  readonly url?: string\r\n  readonly github?: string\r\n  readonly video?: string\r\n  readonly arxiv?: string\r\n\r\n  constructor(data: ProjectDataItem) {\r\n    this.name = data.name\r\n    this.category = data.category\r\n    this.author = data.author\r\n    this.contributors = data.contributors\r\n    this.role = data.role\r\n    this.description = data.description\r\n    this.notes = data.notes\r\n    this.url = data.url\r\n    this.github = data.github\r\n    this.video = data.video\r\n    this.arxiv = data.arxiv\r\n  }\r\n}\r\n\r\nexport class ProjectsDatabase {\r\n  readonly category: string\r\n  readonly projects: Project[]  = []\r\n\r\n  constructor(category: string) {\r\n    this.category = category\r\n  }\r\n\r\n  addProject(project: Project) {\r\n    this.projects.push(project)\r\n  }\r\n}\r\n","import { ElflandAddon } from '@/core/elfland/core/addon-base'\r\nimport type { RouteLocationNormalized, RouteLocationRaw } from 'vue-router'\r\nimport { Project, ProjectsDatabase } from './projects-database'\r\nimport { computed, reactive, type ComputedRef, type Reactive } from 'vue'\r\nimport type { Elfland } from '@/core/elfland/core'\r\n\r\nexport class Projects extends ElflandAddon {\r\n  private __projectsIsGotten: boolean = false\r\n  private __projectsCategorySorted: Reactive<ProjectsDatabase[]> = reactive([])\r\n  private __pinnedProjects: Reactive<Project[]> = reactive([])\r\n\r\n  readonly pinnedProjects: ComputedRef<Project[]> = computed(() => this.__pinnedProjects)\r\n  readonly projectsCategorySorted: ComputedRef<ProjectsDatabase[]> = computed(() => this.__projectsCategorySorted)\r\n\r\n  constructor(elfland: Elfland) {\r\n    super(elfland)\r\n\r\n    elfland.routerPromise.addCheck(this.check, this)\r\n  }\r\n\r\n  logoutCallback(): void {}\r\n\r\n  private async check(\r\n    to: RouteLocationNormalized,\r\n    from: RouteLocationNormalized\r\n  ): Promise<RouteLocationRaw | void> {\r\n    if (this.__projectsIsGotten) return\r\n    try {\r\n      await this.__elfland.data.waitingDataGet\r\n      const data = this.__elfland.data.data\r\n      if (data === null) return\r\n      const projects = data.projects.slice(2)\r\n      const sortedData = (data.projects[0] as unknown as { Sorted: string[] }).Sorted\r\n      sortedData.forEach(s => {\r\n        this.__projectsCategorySorted.push(new ProjectsDatabase(s))\r\n      })\r\n      projects.forEach(p => {\r\n        const pins = new Project(p)\r\n        if (p.pinned) this.__pinnedProjects.push(pins)\r\n        const db = this.__projectsCategorySorted.find(d => d.category === p.category)\r\n        if (!db) {\r\n          const ndb = new ProjectsDatabase(p.category)\r\n          ndb.addProject(pins)\r\n          this.__projectsCategorySorted.push(ndb)\r\n        } else {\r\n          db.addProject(pins)\r\n        }\r\n      })\r\n      this.__projectsIsGotten = true\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }\r\n}\r\n","import type { Article } from '@/core/elfland-addon-articles/core/article'\r\n\r\nexport class Tag {\r\n  readonly tag: string\r\n  readonly articles: Article[] = []\r\n\r\n  get size() {\r\n    return this.articles.length\r\n  }\r\n\r\n  constructor(tag: string) {\r\n    this.tag = tag\r\n  }\r\n  addArticle(article: Article) {\r\n    this.articles.push(article)\r\n  }\r\n}\r\n","import { ElflandAddon } from '@/core/elfland/core/addon-base'\r\nimport { computed, reactive, ref, type ComputedRef, type Reactive, type Ref } from 'vue'\r\nimport type { RouteLocationNormalized, RouteLocationRaw } from 'vue-router'\r\nimport { Tag } from './tag'\r\nimport type { Article } from '@/core/elfland-addon-articles/core/article'\r\nimport type { RouterPromiseSyncFuncRes } from '@/core/elfland/types'\r\nimport type { Elfland } from '@/core/elfland/core'\r\n\r\nexport class Tags extends ElflandAddon {\r\n  private __tagsIsGotten: boolean = false\r\n  private __tags: Reactive<Map<string, Tag>> = reactive(new Map())\r\n  private __selectedTag: Ref<string> = ref('')\r\n  readonly sortIsAsc: Ref<boolean> = ref(false)\r\n  readonly sortedArticels: ComputedRef<Article[]> = computed(() => {\r\n    const tag = this.__selectedTag.value\r\n    if (tag === '') return []\r\n    const list = this.__tags.get(tag)\r\n    if (!list) return []\r\n    return list.articles.sort((a, b) => {\r\n      if (this.sortIsAsc.value) return a.created.getTime() - b.created.getTime()\r\n      else return b.created.getTime() - a.created.getTime()\r\n    })\r\n  })\r\n  readonly tags: ComputedRef<Tag[]> = computed(() => {\r\n    return Array.from(this.__tags.values())\r\n  })\r\n\r\n  constructor(elfland: Elfland) {\r\n    super(elfland)\r\n\r\n    elfland.routerPromise.addCheck(this.check, this)\r\n    elfland.routerPromise.addPostcheck(this.postcheck, this)\r\n  }\r\n\r\n  logoutCallback(): void {}\r\n\r\n  private async check(\r\n    to: RouteLocationNormalized,\r\n    from: RouteLocationNormalized\r\n  ): Promise<RouteLocationRaw | void> {\r\n    if (this.__tagsIsGotten) return\r\n    try {\r\n      await this.__elfland.articles.waitingDataGet\r\n      const articles = this.__elfland.articles.articles.value\r\n      articles.forEach(a => {\r\n        a.tags.forEach(t => {\r\n          if (!this.__tags.has(t.tag)) this.__tags.set(t.tag, new Tag(t.tag))\r\n          const tag = this.__tags.get(t.tag)!\r\n          tag.addArticle(a)\r\n        })\r\n      })\r\n      this.__tagsIsGotten = true\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }\r\n\r\n  private postcheck(to: RouteLocationNormalized, from: RouteLocationNormalized): RouterPromiseSyncFuncRes {\r\n    if (!this.is(to, 'tags')) return\r\n    const tag = to.query.tag\r\n    this.__selectedTag.value = tag ? typeof tag === 'string' ? tag : tag[0] as string : ''\r\n  }\r\n}\r\n","import type { Article, Category as ArticleCategory } from '@/core/elfland-addon-articles/core/article'\r\n\r\nexport class Category {\r\n  readonly category: string\r\n  readonly children: Map<string, Category> = new Map()\r\n  readonly allArts: Article[] = []\r\n  readonly selfArts: Article[] = []\r\n  readonly parent: Category | null = null\r\n\r\n  fold: boolean = true\r\n\r\n  get categories(): Category[] {\r\n    return Array.from(this.children.values())\r\n  }\r\n\r\n  get path(): string {\r\n    if (this.category === 'ROOT' || this.parent === null) return ''\r\n    return this.parent.path + '/' + this.category\r\n  }\r\n\r\n  constructor(category?: string, parent?: Category) {\r\n    this.category = category || 'ROOT'\r\n    this.parent = parent || null\r\n  }\r\n\r\n  addArticle(art: Article, cate: ArticleCategory) {\r\n    this.allArts.push(art)\r\n    const category = cate.category\r\n    if (!this.children.has(category)) this.children.set(category, new Category(category, this))\r\n    const categoryIns = this.children.get(category) as Category\r\n    if (cate.child === null) {\r\n      categoryIns.allArts.push(art)\r\n      categoryIns.selfArts.push(art)\r\n    } else {\r\n      categoryIns.addArticle(art, cate.child)\r\n    }\r\n  }\r\n}\r\n","import { ElflandAddon } from '@/core/elfland/core/addon-base'\r\nimport type { RouteLocationNormalized, RouteLocationRaw } from 'vue-router'\r\nimport { Category } from './category'\r\nimport { computed, reactive, ref, type ComputedRef, type Reactive, type Ref } from 'vue'\r\nimport type { Article } from '@/core/elfland-addon-articles/core/article'\r\nimport type { RouterPromiseSyncFuncRes } from '@/core/elfland/types'\r\nimport type { Elfland } from '@/core/elfland/core'\r\n\r\nexport class Categories extends ElflandAddon {\r\n  private __categoriesIsGotten: boolean = false\r\n  private __category: Reactive<Category> = reactive(new Category())\r\n\r\n  private __selcetedCategory: Ref<string> = ref('')\r\n  private __displayArticlesList: ComputedRef<Article[]> = computed(() => {\r\n    if (this.__selcetedCategory.value === '') return []\r\n    const cates = this.__selcetedCategory.value.split('/').filter(c => c !== '')\r\n    let res: Article[] = []\r\n    let cate: Category | undefined = this.__category\r\n    while (cates.length > 0) {\r\n      cate = cate.children.get(cates.shift() || '')\r\n      if (!cate) return []\r\n      res = cate.allArts\r\n    }\r\n    return res\r\n  })\r\n  get categories(): Category[] {\r\n    return this.__category.categories.sort((a, b) => a.category === '未分组' ? 1 : -1)\r\n  }\r\n  readonly sortIsAsc: Ref<boolean> = ref(false)\r\n  readonly sortedArticels: ComputedRef<Article[]> = computed(() => {\r\n    return this.__displayArticlesList.value.sort((a, b) => {\r\n      if (this.sortIsAsc.value) return a.created.getTime() - b.created.getTime()\r\n      else return b.created.getTime() - a.created.getTime()\r\n    })\r\n  })\r\n\r\n  constructor(elfland: Elfland) {\r\n    super(elfland)\r\n\r\n    elfland.routerPromise.addCheck(this.check, this)\r\n    elfland.routerPromise.addPostcheck(this.postcheck, this)\r\n  }\r\n\r\n  logoutCallback(): void {}\r\n\r\n  private async check(\r\n    to: RouteLocationNormalized,\r\n    from: RouteLocationNormalized\r\n  ): Promise<RouteLocationRaw | void> {\r\n    if (this.__categoriesIsGotten) return\r\n    try {\r\n      await this.__elfland.articles.waitingDataGet\r\n      const articles = this.__elfland.articles.articles.value\r\n      articles.forEach(a => {\r\n        this.__category.addArticle(a, a.categories)\r\n      })\r\n      this.__categoriesIsGotten = true\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }\r\n\r\n  private postcheck(to: RouteLocationNormalized, from: RouteLocationNormalized): RouterPromiseSyncFuncRes {\r\n    if (!this.is(to, 'categories')) return\r\n    const category = to.query.category\r\n    this.__selcetedCategory.value = category ? typeof category === 'string' ? category : category[0] as string : ''\r\n    if (this.__selcetedCategory.value === '') return\r\n    const cates = this.__selcetedCategory.value.split('/').filter(c => c !== '')\r\n    let cate: Category | undefined = this.__category\r\n    while (cates.length > 0) {\r\n      cate = cate.children.get(cates.shift() || '')\r\n      if (!cate) return\r\n      cate.fold = false\r\n    }\r\n  }\r\n}\r\n","import type { LinkDataItem, SkillDataItem } from '@/core/elfland-addon-data/types/about'\r\nimport type { Elfland } from '@/core/elfland/core'\r\nimport { ElflandAddon } from '@/core/elfland/core/addon-base'\r\nimport { reactive, ref, type Reactive, type Ref } from 'vue'\r\nimport type { RouteLocationNormalized, RouteLocationRaw } from 'vue-router'\r\n\r\nexport class About extends ElflandAddon {\r\n  private __aboutIsGotten: boolean = false\r\n\r\n  readonly name: Ref<string> = ref('')\r\n  readonly position: Ref<string> = ref('')\r\n  readonly avater: Ref<string> = ref('')\r\n  readonly about: Reactive<string[]> = reactive([])\r\n  readonly github: Ref<string> = ref('')\r\n\r\n  readonly links: Reactive<LinkDataItem[]> = reactive([])\r\n  readonly skills: Reactive<SkillDataItem[]> = reactive([])\r\n\r\n  constructor(elfland: Elfland) {\r\n    super(elfland)\r\n\r\n    elfland.routerPromise.addCheck(this.check, this)\r\n  }\r\n\r\n  logoutCallback(): void {}\r\n\r\n  private async check(\r\n    to: RouteLocationNormalized,\r\n    from: RouteLocationNormalized\r\n  ): Promise<RouteLocationRaw | void> {\r\n    if (this.__aboutIsGotten) return\r\n    try {\r\n      await this.__elfland.data.waitingDataGet\r\n      const data = this.__elfland.data.data\r\n      if (data === null) return\r\n      const about = data.about\r\n      this.name.value = about.name\r\n      this.position.value = about.position\r\n      this.avater.value = about.avater\r\n      about.about.forEach(a => {\r\n        this.about.push(a)\r\n      })\r\n      this.github.value = about.github\r\n      about.links.forEach(l => {\r\n        this.links.push(l)\r\n      })\r\n      about.skills.forEach(s => {\r\n        this.skills.push(s)\r\n      })\r\n\r\n      this.__aboutIsGotten = true\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }\r\n}\r\n","import EventEmitter from 'eventemitter3'\r\nimport type { Router } from 'vue-router'\r\n\r\nimport { RouterPromise } from './router-promise'\r\nimport type { ElflandEvents } from '../types'\r\nimport { Theme } from '@/core/elfland-addon-theme'\r\nimport { Data } from '@/core/elfland-addon-data'\r\nimport { Articles } from '@/core/elfland-addon-articles'\r\nimport { Links } from '@/core/elfland-addon-links'\r\nimport { Article } from '@/core/elfland-addon-article'\r\nimport { Projects } from '@/core/elfland-addon-projects'\r\nimport { Tags } from '@/core/elfland-addon-tags/core'\r\nimport { Categories } from '@/core/elfland-addon-categories'\r\nimport { About } from '@/core/elfland-addon-about'\r\n\r\nexport class Elfland extends EventEmitter<ElflandEvents> {\r\n  private static instance: Elfland | null = null\r\n  static getInstance(router?: Router): Elfland {\r\n    if (!Elfland.instance && router) {\r\n      Elfland.instance = new Elfland(router)\r\n    }\r\n    return Elfland.instance as Elfland\r\n  }\r\n\r\n  readonly routerPromise: RouterPromise\r\n\r\n  readonly theme: Theme\r\n\r\n  readonly about: About\r\n\r\n  readonly data: Data\r\n  readonly articles: Articles\r\n  readonly article: Article\r\n  readonly links: Links\r\n  readonly projects: Projects\r\n  readonly tags: Tags\r\n  readonly categories: Categories\r\n\r\n  constructor(router: Router) {\r\n    super()\r\n    this.routerPromise = new RouterPromise(router)\r\n\r\n    this.theme = new Theme(this)\r\n\r\n    this.about = new About(this)\r\n\r\n    this.data = new Data(this)\r\n    this.articles = new Articles(this)\r\n    this.article = new Article(this)\r\n    this.links = new Links(this)\r\n    this.projects = new Projects(this)\r\n    this.tags = new Tags(this)\r\n    this.categories = new Categories(this)\r\n  }\r\n}\r\n\r\nexport function useElfland() {\r\n  return Elfland.getInstance()\r\n}\r\n","import { createRouter, createWebHistory } from 'vue-router'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\nNProgress.configure({ showSpinner: false })\r\nimport { Elfland } from '@/core/elfland/core'\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(import.meta.env.BASE_URL),\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'home',\r\n      component: () => import('../views/Home/index.vue')\r\n    },\r\n    {\r\n      path: '/archives',\r\n      name: 'archives',\r\n      // route level code-splitting\r\n      // this generates a separate chunk (About.[hash].js) for this route\r\n      // which is lazy-loaded when the route is visited.\r\n      component: () => import('../views/Archives/index.vue')\r\n    },\r\n    {\r\n      path: '/categories',\r\n      name: 'categories',\r\n      component: () => import('../views/Categories/index.vue')\r\n    },\r\n    {\r\n      path: '/tags',\r\n      name: 'tags',\r\n      component: () => import('../views/Tags/index.vue')\r\n    },\r\n    {\r\n      path: '/links',\r\n      name: 'links',\r\n      component: () => import('../views/Links/index.vue')\r\n    },\r\n    {\r\n      path: '/search',\r\n      name: 'search',\r\n      component: () => import('../views/AboutView.vue')\r\n    },\r\n    {\r\n      path: '/blog/:articlePath',\r\n      name: 'article',\r\n      component: () => import('../views/Article/index.vue')\r\n    },\r\n    {\r\n      path: '/about',\r\n      name: 'about',\r\n      component: () => import('../views/AboutView.vue')\r\n    },\r\n    {\r\n      path: '/:pathMatch(.*)*',\r\n      name: '404',\r\n      redirect: '/'\r\n    }\r\n  ]\r\n})\r\n\r\nconst elfland = Elfland.getInstance(router)\r\n\r\nrouter.beforeEach(async (to, from, next) => {\r\n  NProgress.start()\r\n  // console.log('beforeEach ready to precheck')\r\n  if (!elfland.routerPromise.precheck(to, from, next)) return\r\n  // console.log('beforeEach precheck finish, ready to check')\r\n  if (!(await elfland.routerPromise.check(to, from, next))) return\r\n  // console.log('beforeEach check finish')\r\n  next()\r\n})\r\n\r\nrouter.afterEach((to, from, failure) => {\r\n  // console.log('afterEach ready to postcheck')\r\n  elfland.routerPromise.postcheck(to, from)\r\n  // console.log('afterEach postcheck finish')\r\n  NProgress.done()\r\n})\r\n\r\nexport default router\r\n","import './assets/main.css'\r\n\r\nimport { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\n\r\nimport 'element-plus/dist/index.css'\r\nimport 'element-plus/theme-chalk/dark/css-vars.css'\r\n\r\nconst app = createApp(App)\r\n\r\napp.use(router)\r\n\r\napp.mount('#app')\r\n"],"file":"assets/index-DDpQ9fFd.js"}