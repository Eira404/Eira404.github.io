{"version":3,"file":"index-DnVxy2dY.js","sources":["../../src/components/TagsList/tag.vue","../../src/components/TagsList/index.vue","../../src/views/Tags/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { useElfland } from '@/core/elfland'\r\nimport { Tag } from '@/core/elfland-addon-tags/core/tag'\r\nimport { computed } from 'vue'\r\n\r\nconst props = defineProps({\r\n  tag: {\r\n    type: Tag,\r\n    required: true\r\n  }\r\n})\r\n\r\nconst elfland = useElfland()\r\nconst theme = elfland.theme\r\n\r\ntype RGBColor = { r: number; g: number; b: number };\r\n\r\n/**\r\n * 根据数值范围计算渐变颜色\r\n * @param min 最小值\r\n * @param max 最大值\r\n * @param startColor 起始颜色（十六进制格式，如 \"#FF0000\"）\r\n * @param endColor 结束颜色（十六进制格式，如 \"#00FF00\"）\r\n * @param currentValue 当前值\r\n * @returns 计算后的颜色（十六进制格式）\r\n */\r\nfunction calculateColor(\r\n  min: number,\r\n  max: number,\r\n  startColor: string,\r\n  endColor: string,\r\n  currentValue: number\r\n): string {\r\n  // 边界检查\r\n  if (currentValue <= min) return startColor\r\n  if (currentValue >= max) return endColor\r\n\r\n  // 防止除零错误\r\n  if (min === max) return startColor\r\n\r\n  // 将十六进制颜色转换为RGB对象\r\n  function hexToRgb(hex: string): RGBColor {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\r\n    if (!result) {\r\n      throw new Error(`无效的颜色格式: ${hex}`)\r\n    }\r\n    return {\r\n      r: parseInt(result[1], 16),\r\n      g: parseInt(result[2], 16),\r\n      b: parseInt(result[3], 16)\r\n    }\r\n  }\r\n\r\n  // 将RGB对象转换为十六进制颜色\r\n  function rgbToHex(r: number, g: number, b: number): string {\r\n    return '#' + [r, g, b].map(x => {\r\n      const hex = Math.round(x).toString(16)\r\n      return hex.length === 1 ? '0' + hex : hex\r\n    }).join('')\r\n  }\r\n\r\n  // 解析颜色\r\n  const startRGB = hexToRgb(startColor)\r\n  const endRGB = hexToRgb(endColor)\r\n\r\n  // 计算当前值在范围内的比例（0到1之间）\r\n  const ratio = (currentValue - min) / (max - min)\r\n\r\n  // 线性插值计算RGB值\r\n  const r = startRGB.r + (endRGB.r - startRGB.r) * ratio\r\n  const g = startRGB.g + (endRGB.g - startRGB.g) * ratio\r\n  const b = startRGB.b + (endRGB.b - startRGB.b) * ratio\r\n\r\n  return rgbToHex(r, g, b)\r\n}\r\n\r\n/**\r\n * 根据数值范围计算渐变的字体大小\r\n * @param min        最小值\r\n * @param max        最大值\r\n * @param startSize  起始字体大小（px）\r\n * @param endSize    结束字体大小（px）\r\n * @param currentValue 当前值\r\n * @returns          计算后的字体大小（px）\r\n */\r\nfunction calculateFontSize(\r\n  min: number,\r\n  max: number,\r\n  startSize: number,\r\n  endSize: number,\r\n  currentValue: number\r\n): number {\r\n  // 边界处理\r\n  if (currentValue <= min) return startSize\r\n  if (currentValue >= max) return endSize\r\n\r\n  // 防止除零\r\n  if (min === max) return startSize\r\n\r\n  // 线性插值\r\n  const ratio = (currentValue - min) / (max - min)\r\n  return startSize + (endSize - startSize) * ratio\r\n}\r\n\r\nconst color = computed(() => {\r\n  const t = theme.theme.value\r\n  if (t === 'light') return calculateColor(1, 40, '#4a5565', '#4fadff', props.tag.size)\r\n  else return calculateColor(1, 40, '#99a1af', '#4fadff', props.tag.size)\r\n})\r\nconst size = computed(() => {\r\n  return calculateFontSize(1, 40, 16, 32, props.tag.size) + 'px'\r\n})\r\n</script>\r\n\r\n<template>\r\n  <router-link\r\n    :to=\"{ name: 'tags', query: {tag: tag.tag} }\"\r\n    :style=\"{color: color, fontSize: size}\"\r\n    class=\"p-2 hover:!text-moonlight-500 hover:underline transition-all duration-150\"\r\n  >\r\n    <span>\r\n      {{ tag.tag }}\r\n    </span>\r\n  </router-link>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { useElfland } from '@/core/elfland'\r\nimport { ElIcon } from 'element-plus'\r\nimport { Sort } from '@element-plus/icons-vue'\r\nimport ArticlesList from '@/components/ArticlesList/index.vue'\r\nimport tag from './tag.vue'\r\n\r\nconst elfland = useElfland()\r\nconst tagsIns = elfland.tags\r\nconst tags = tagsIns.tags\r\nconst sortedArticels = tagsIns.sortedArticels\r\nconst sortIsAsc = tagsIns.sortIsAsc\r\n</script>\r\n\r\n<template>\r\n  <div class=\"flex flex-col gap-4 p-12\">\r\n    <div class=\"p-8 pt-0 flex flex-wrap gap-2\">\r\n      <tag\r\n        v-for=\"t in tags\"\r\n        :key=\"t.tag\"\r\n        :tag=\"t\"\r\n      />\r\n    </div>\r\n    <div\r\n      v-show=\"sortedArticels.length\"\r\n      class=\"flex justify-center items-center\"\r\n    >\r\n      <div\r\n        class=\"p-3 flex hover:text-moonlight-500 transition-all duration-150 border rounded-xl border-black/30 dark:border-white/30 select-none cursor-pointer\"\r\n        :title=\"sortIsAsc ? '升序' : '降序'\"\r\n        @click=\"sortIsAsc = !sortIsAsc\"\r\n      >\r\n        <el-icon\r\n          :size=\"20\"\r\n          class=\"transition-all duration-150\"\r\n          :class=\"[{ '-scale-x-100': sortIsAsc }]\"\r\n        ><Sort /></el-icon>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <ArticlesList :articles=\"sortedArticels\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport TagsList from '@/components/TagsList/index.vue'\r\nimport Structure from '@/components/Structure/default.vue'\r\n</script>\r\n\r\n<template>\r\n  <Structure>\r\n    <template #main>\r\n      <TagsList />\r\n    </template>\r\n  </Structure>\r\n</template>\r\n"],"names":["props","__props","theme","useElfland","calculateColor","min","max","startColor","endColor","currentValue","hexToRgb","hex","result","rgbToHex","r","g","b","x","startRGB","endRGB","ratio","calculateFontSize","startSize","endSize","color","computed","size","_createBlock","_component_router_link","_normalizeStyle","_createElementVNode","_toDisplayString","tagsIns","tags","sortedArticels","sortIsAsc","_openBlock","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","_unref","tag","_withDirectives","_hoisted_3","_cache","$event","_createVNode","ElIcon","_normalizeClass","Sort","_vShow","ArticlesList","Structure","TagsList"],"mappings":"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"}