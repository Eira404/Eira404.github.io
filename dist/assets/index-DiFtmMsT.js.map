{"version":3,"mappings":"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","names":["props","__props","logs","_useModel","iframeRef","ref","iframeContent","computed","buildSrcdoc","iframeSrcDoc","srcDocUpdate","debounce","val","trySet","setIframe","watch","newVal","timer","escapeScript","str","html","css","js","tsCompiled","jsSafe","tsSafe","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","selectedExampleFiles","useElfland","selectedLang","selectedShower","codeHtml","codeCss","codeJs","codeTs","codeTsCompiled","tsReady","tsMod","tryCompile","compile","ts","err","tsUpdate","onMsg","e","data","level","args","line","x","onMounted","__vitePreload","n","onBeforeUnmount","_hoisted_2","_createVNode","_unref","ElRadioGroup","$event","ElRadioButton","_hoisted_3","_hoisted_4","MyCode","_hoisted_5","MySandbox","MyConsole","_createBlock","Structure","Playground"],"ignoreList":[],"sources":["../../src/components/Playground/sandbox.vue","../../src/components/Playground/index.vue","../../src/views/Playground/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { debounce } from '@/core/elfland/utils'\r\nimport { computed, ref, watch, type PropType } from 'vue'\r\n\r\nconst props = defineProps({\r\n  html: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  css: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  js: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  ts: {\r\n    type: String,\r\n    required: true\r\n  }\r\n})\r\ntype LogLevel = 'log' | 'info' | 'warn' | 'error' | 'debug'\r\ninterface LogEntry { level: LogLevel; text: string; t: number }\r\nconst logs = defineModel('logs', {\r\n  required: true,\r\n  type: Array as PropType<LogEntry[]>\r\n})\r\n\r\nconst iframeRef = ref<HTMLIFrameElement | null>(null)\r\nconst iframeContent = computed(() => buildSrcdoc(props.html, props.css, props.js, props.ts))\r\nconst iframeSrcDoc = ref(iframeContent.value)\r\nconst srcDocUpdate = debounce((val: string) => {\r\n  iframeSrcDoc.value = val\r\n}, 500)\r\nconst trySet = setIframe()\r\ntrySet(iframeSrcDoc.value)\r\nwatch(iframeContent, (newVal) => {\r\n  srcDocUpdate(newVal)\r\n})\r\nwatch(iframeSrcDoc, (newVal) => {\r\n  trySet(newVal)\r\n})\r\n\r\nfunction setIframe() {\r\n  let timer: NodeJS.Timeout | null = null\r\n  const trySet = (val: string) => {\r\n    if (timer) clearTimeout(timer)\r\n    timer = null\r\n    if (iframeRef.value) {\r\n      logs.value = []\r\n      iframeRef.value.srcdoc = val\r\n    } else {\r\n      timer = setTimeout(() => trySet(val), 100)\r\n    }\r\n  }\r\n  return trySet\r\n}\r\n\r\nfunction escapeScript(str: string) {\r\n  return str.replace(/<\\/script>/gi, '<\\/script>')\r\n}\r\nfunction buildSrcdoc(html: string, css: string, js: string, tsCompiled: string) {\r\n  const jsSafe = escapeScript(js)\r\n  const tsSafe = escapeScript(tsCompiled)\r\n  const cssSafe = css\r\n  const htmlSafe = html\r\n  return `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"utf-8\" />\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n  <style>html,body{height:100%;} ${cssSafe}</style>\r\n  <script>\r\n  // Console & error relay\r\n  (function(){\r\n    const send = (level, args)=>{\r\n      try { parent.postMessage({ source:'playground-console', level, args: args.map((a)=>{\r\n        try{\r\n          if (typeof a === 'string') return a;\r\n          if (a && a.stack) return a.stack;\r\n          if (a instanceof Element) return '<' + a.tagName.toLowerCase() + '>';\r\n          const seen = new WeakSet();\r\n          return JSON.stringify(a, (k,v)=>{ if (typeof v==='object' && v!==null){ if (seen.has(v)) return '[Circular]'; seen.add(v);} return v; }, 2);\r\n        }catch(e){ return String(a); }\r\n      }) }, '*'); } catch(_){}\r\n    };\r\n    ['log','info','warn','error','debug'].forEach(m=>{\r\n      const orig = console[m];\r\n      console[m] = function(){ send(m, Array.from(arguments)); try{orig && orig.apply(console, arguments)}catch(_){} };\r\n    });\r\n    window.addEventListener('error', function(e){ send('error', [ (e && e.message ? e.message : 'Error') + (e && e.filename ? (' @ ' + e.filename + ':' + e.lineno + ':' + e.colno) : '') ]); });\r\n    window.addEventListener('unhandledrejection', function(e){ send('error', ['Unhandled Rejection: ' + (e && e.reason ? (e.reason.stack || e.reason.message || String(e.reason)) : '')]); });\r\n  })();\r\n  <\\/script>\r\n</head>\r\n<body>\r\n  ${htmlSafe}\r\n  <script>${tsSafe}<\\/script>\r\n  <script>${jsSafe}<\\/script>\r\n</body>\r\n</html>`\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"h-full overflow-auto w-full\">\r\n    <iframe\r\n      ref=\"iframeRef\"\r\n      title=\"preview\"\r\n      sandbox=\"allow-scripts allow-modals allow-forms allow-popups\"\r\n      class=\"w-full h-full\"\r\n    />\r\n  </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { onBeforeUnmount, onMounted, ref, watch } from 'vue'\r\nimport MyCode from './code.vue'\r\nimport MySandbox from './sandbox.vue'\r\nimport MyConsole from './console.vue'\r\nimport { ElRadioGroup, ElRadioButton } from 'element-plus'\r\nimport { debounce } from '@/core/elfland/utils'\r\nimport { useElfland } from '@/core/elfland'\r\n\r\nconst elfland = useElfland()\r\nconst playground = elfland.playground\r\nconst selectedExampleFiles = playground.selectedExampleFiles\r\n\r\nconst selectedLang = ref<'HTML' | 'CSS' | 'JavaScript' | 'TypeScript'>('HTML')\r\nconst selectedShower = ref<'HTML' | 'Console'>('HTML')\r\n\r\nconst codeHtml = ref(selectedExampleFiles.value.html.code)\r\nconst codeCss = ref(selectedExampleFiles.value.css.code)\r\nconst codeJs = ref(selectedExampleFiles.value.js.code)\r\nconst codeTs = ref(selectedExampleFiles.value.ts.code)\r\nconst codeTsCompiled = ref('')\r\n\r\nconst tsReady = ref(false)\r\nconst tsMod = ref<any>(null)\r\n\r\nconst createCompileTS = () => {\r\n  let timer: NodeJS.Timeout | null = null\r\n  const compile = (val: string) => {\r\n    const ts = tsMod.value\r\n    if (!ts) {\r\n      return `console.warn('TypeScript compiler not loaded yet. Running without TS.');`\r\n    }\r\n    try {\r\n      const out = ts.transpileModule(codeTs.value, {\r\n        compilerOptions: {\r\n          target: ts.ScriptTarget.ES2020,\r\n          module: ts.ModuleKind.ESNext,\r\n          sourceMap: false,\r\n          lib: ['es2020', 'dom']\r\n        }\r\n      })\r\n      return out.outputText\r\n    } catch (err: any) {\r\n      return `console.error('TS compile error:', ${JSON.stringify(String(err && (err.message || err)))} )`\r\n    }\r\n  }\r\n  const tryCompile = (val: string) => {\r\n    if (timer) clearTimeout(timer)\r\n    timer = null\r\n    codeTsCompiled.value = compile(val)\r\n    if (tsMod.value) return\r\n    timer = setTimeout(() => tryCompile(val), 100)\r\n  }\r\n  return tryCompile\r\n}\r\n\r\nconst tryCompile = createCompileTS()\r\ntryCompile(codeTs.value)\r\nconst tsUpdate = debounce((val: string) => {\r\n  tryCompile(val)\r\n}, 500)\r\n\r\nwatch(codeTs, (newVal) => {\r\n  tsUpdate(newVal)\r\n})\r\n\r\ntype LogLevel = 'log' | 'info' | 'warn' | 'error' | 'debug'\r\ninterface LogEntry { level: LogLevel; text: string; t: number }\r\nconst logs = ref<LogEntry[]>([])\r\n\r\nfunction onMsg(e: MessageEvent) {\r\n  const data: any = e && e.data\r\n  if (!data || data.source !== 'playground-console') return\r\n  const { level, args } = data\r\n  const line = (Array.isArray(args) ? args : [args]).map((x:any) => typeof x === 'string' ? x : JSON.stringify(x)).join(' ')\r\n  logs.value.push({ level, text: line, t: Date.now() })\r\n}\r\n\r\nonMounted(async () => {\r\n  window.addEventListener('message', onMsg)\r\n  try {\r\n    tsMod.value = await import('typescript')\r\n    tsReady.value = true\r\n  } catch {\r\n    tsReady.value = false\r\n  }\r\n})\r\n\r\nonBeforeUnmount(() => {\r\n  window.removeEventListener('message', onMsg)\r\n})\r\n\r\n</script>\r\n\r\n<template>\r\n  <div class=\"h-full\">\r\n    <div class=\"h-10 flex items-center justify-between px-10\">\r\n      <div>\r\n        <el-radio-group v-model=\"selectedLang\">\r\n          <el-radio-button label=\"HTML\" />\r\n          <el-radio-button label=\"CSS\" />\r\n          <el-radio-button label=\"JavaScript\" />\r\n          <el-radio-button label=\"TypeScript\" />\r\n        </el-radio-group>\r\n      </div>\r\n      <div>\r\n        <el-radio-group v-model=\"selectedShower\">\r\n          <el-radio-button label=\"HTML\" />\r\n          <el-radio-button label=\"Console\" />\r\n        </el-radio-group>\r\n      </div>\r\n    </div>\r\n    <div\r\n      style=\"height: calc(100% - 40px);\"\r\n      class=\"flex\"\r\n    >\r\n      <div class=\"h-full w-1/2\">\r\n        <MyCode\r\n          v-show=\"selectedLang === 'HTML'\"\r\n          v-model:code=\"codeHtml\"\r\n          title=\"HTML\"\r\n          lang=\"html\"\r\n        />\r\n        <MyCode\r\n          v-show=\"selectedLang === 'CSS'\"\r\n          v-model:code=\"codeCss\"\r\n          title=\"CSS\"\r\n          lang=\"css\"\r\n        />\r\n        <MyCode\r\n          v-show=\"selectedLang === 'JavaScript'\"\r\n          v-model:code=\"codeJs\"\r\n          title=\"JavaScript\"\r\n          lang=\"js\"\r\n        />\r\n        <MyCode\r\n          v-show=\"selectedLang === 'TypeScript'\"\r\n          v-model:code=\"codeTs\"\r\n          title=\"TypeScript\"\r\n          lang=\"ts\"\r\n        />\r\n      </div>\r\n      <div class=\"w-1/2\">\r\n        <MySandbox\r\n          v-show=\"selectedShower === 'HTML'\"\r\n          v-model:logs=\"logs\"\r\n          :html=\"codeHtml\"\r\n          :css=\"codeCss\"\r\n          :js=\"codeJs\"\r\n          :ts=\"codeTsCompiled\"\r\n        />\r\n        <MyConsole\r\n          v-show=\"selectedShower === 'Console'\"\r\n          v-model:logs=\"logs\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport Structure from '@/components/Structure/playground.vue'\r\nimport Playground from '@/components/Playground/index.vue'\r\n</script>\r\n\r\n<template>\r\n  <Structure>\r\n    <template #main>\r\n      <Playground />\r\n    </template>\r\n  </Structure>\r\n</template>\r\n"],"file":"assets/index-DiFtmMsT.js"}