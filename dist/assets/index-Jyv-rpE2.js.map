{"version":3,"file":"index-Jyv-rpE2.js","sources":["../../src/components/TagsList/tag.vue","../../src/components/TagsList/index.vue","../../src/views/Tags/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { useElfland } from '@/core/elfland'\r\nimport { Tag } from '@/core/elfland-addon-tags/core/tag'\r\nimport { computed } from 'vue'\r\n\r\nconst props = defineProps({\r\n  tag: {\r\n    type: Tag,\r\n    required: true\r\n  }\r\n})\r\n\r\nconst elfland = useElfland()\r\nconst theme = elfland.theme\r\n\r\ntype RGBColor = { r: number; g: number; b: number };\r\n\r\n/**\r\n * 根据数值范围计算渐变颜色\r\n * @param min 最小值\r\n * @param max 最大值\r\n * @param startColor 起始颜色（十六进制格式，如 \"#FF0000\"）\r\n * @param endColor 结束颜色（十六进制格式，如 \"#00FF00\"）\r\n * @param currentValue 当前值\r\n * @returns 计算后的颜色（十六进制格式）\r\n */\r\nfunction calculateColor(\r\n  min: number,\r\n  max: number,\r\n  startColor: string,\r\n  endColor: string,\r\n  currentValue: number\r\n): string {\r\n  // 边界检查\r\n  if (currentValue <= min) return startColor\r\n  if (currentValue >= max) return endColor\r\n\r\n  // 防止除零错误\r\n  if (min === max) return startColor\r\n\r\n  // 将十六进制颜色转换为RGB对象\r\n  function hexToRgb(hex: string): RGBColor {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\r\n    if (!result) {\r\n      throw new Error(`无效的颜色格式: ${hex}`)\r\n    }\r\n    return {\r\n      r: parseInt(result[1], 16),\r\n      g: parseInt(result[2], 16),\r\n      b: parseInt(result[3], 16)\r\n    }\r\n  }\r\n\r\n  // 将RGB对象转换为十六进制颜色\r\n  function rgbToHex(r: number, g: number, b: number): string {\r\n    return '#' + [r, g, b].map(x => {\r\n      const hex = Math.round(x).toString(16)\r\n      return hex.length === 1 ? '0' + hex : hex\r\n    }).join('')\r\n  }\r\n\r\n  // 解析颜色\r\n  const startRGB = hexToRgb(startColor)\r\n  const endRGB = hexToRgb(endColor)\r\n\r\n  // 计算当前值在范围内的比例（0到1之间）\r\n  const ratio = (currentValue - min) / (max - min)\r\n\r\n  // 线性插值计算RGB值\r\n  const r = startRGB.r + (endRGB.r - startRGB.r) * ratio\r\n  const g = startRGB.g + (endRGB.g - startRGB.g) * ratio\r\n  const b = startRGB.b + (endRGB.b - startRGB.b) * ratio\r\n\r\n  return rgbToHex(r, g, b)\r\n}\r\n\r\n/**\r\n * 根据数值范围计算渐变的字体大小\r\n * @param min        最小值\r\n * @param max        最大值\r\n * @param startSize  起始字体大小（px）\r\n * @param endSize    结束字体大小（px）\r\n * @param currentValue 当前值\r\n * @returns          计算后的字体大小（px）\r\n */\r\nfunction calculateFontSize(\r\n  min: number,\r\n  max: number,\r\n  startSize: number,\r\n  endSize: number,\r\n  currentValue: number\r\n): number {\r\n  // 边界处理\r\n  if (currentValue <= min) return startSize\r\n  if (currentValue >= max) return endSize\r\n\r\n  // 防止除零\r\n  if (min === max) return startSize\r\n\r\n  // 线性插值\r\n  const ratio = (currentValue - min) / (max - min)\r\n  return startSize + (endSize - startSize) * ratio\r\n}\r\n\r\nconst color = computed(() => {\r\n  const t = theme.theme.value\r\n  if (t === 'light') return calculateColor(1, 40, '#4a5565', '#4fadff', props.tag.size)\r\n  else return calculateColor(1, 40, '#99a1af', '#4fadff', props.tag.size)\r\n})\r\nconst size = computed(() => {\r\n  return calculateFontSize(1, 40, 16, 32, props.tag.size) + 'px'\r\n})\r\n</script>\r\n\r\n<template>\r\n  <router-link\r\n    :to=\"{ name: 'tags', query: {tag: tag.tag} }\"\r\n    :style=\"{color: color, fontSize: size}\"\r\n    class=\"p-2 hover:!text-moonlight-500 hover:underline transition-all duration-150\"\r\n  >\r\n    <span>\r\n      {{ tag.tag }}\r\n    </span>\r\n  </router-link>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { useElfland } from '@/core/elfland'\r\nimport { ElIcon } from 'element-plus'\r\nimport { Sort } from '@element-plus/icons-vue'\r\nimport ArticlesList from '@/components/ArticlesList/index.vue'\r\nimport tag from './tag.vue'\r\n\r\nconst elfland = useElfland()\r\nconst tagsIns = elfland.tags\r\nconst tags = tagsIns.tags\r\nconst sortedArticels = tagsIns.sortedArticels\r\nconst sortIsAsc = tagsIns.sortIsAsc\r\n</script>\r\n\r\n<template>\r\n  <div class=\"flex flex-col gap-4 p-12\">\r\n    <div class=\"p-8 pt-0 flex flex-wrap gap-2\">\r\n      <tag\r\n        v-for=\"t in tags\"\r\n        :key=\"t.tag\"\r\n        :tag=\"t\"\r\n      />\r\n    </div>\r\n    <div\r\n      v-show=\"sortedArticels.length\"\r\n      class=\"flex justify-center items-center\"\r\n    >\r\n      <div\r\n        class=\"p-3 flex hover:text-moonlight-500 transition-all duration-150 border rounded-xl border-black/30 dark:border-white/30 select-none cursor-pointer\"\r\n        :title=\"sortIsAsc ? '升序' : '降序'\"\r\n        @click=\"sortIsAsc = !sortIsAsc\"\r\n      >\r\n        <el-icon\r\n          :size=\"20\"\r\n          class=\"transition-all duration-150\"\r\n          :class=\"[{ '-scale-x-100': sortIsAsc }]\"\r\n        ><Sort /></el-icon>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <ArticlesList :articles=\"sortedArticels\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport TagsList from '@/components/TagsList/index.vue'\r\nimport Structure from '@/components/Structure/default.vue'\r\n</script>\r\n\r\n<template>\r\n  <Structure>\r\n    <template #main>\r\n      <TagsList />\r\n    </template>\r\n  </Structure>\r\n</template>\r\n"],"names":["r","g","b","_createBlock","_normalizeStyle","_createElementVNode","_toDisplayString","_openBlock","_createElementBlock","_Fragment","_renderList","_unref","tag","_withDirectives","_createVNode","_normalizeClass","Sort","_vShow","ArticlesList","Structure","TagsList"],"mappings":"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"}